[{"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\index.js":"1","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\App.js":"3","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\AppLayout.js":"4","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\UserContext.js":"5","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\constant.js":"6","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\api\\index.js":"7","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\RouteUtils.js":"8","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\config\\routes.config.js":"9","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\index.js":"10","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout3.js":"11","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout2.js":"12","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout1.js":"13","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Vendor\\ManageProduct\\index.js":"14","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Vendor\\VendorSignup\\index.js":"15","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ResetPassword\\index.js":"16","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ForgotPassword\\index.js":"17","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Signin\\index.js":"18","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Customer\\CustomerSignup\\index.js":"19","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\images.js":"20","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\components\\Logout\\index.js":"21","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\components\\Footer\\index.js":"22","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\components\\Header\\index.js":"23","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\category.js":"24","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Cart\\index.js":"25","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout.js":"26","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\Loading.js":"27","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MySetting\\index.js":"28","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MyRecent\\index.js":"29","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MyCart\\index.js":"30","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Payment\\index.js":"31","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Checkout\\index.js":"32","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\AddCategoryToProduct\\index.js":"33","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Product\\index.js":"34","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\UploadProduct\\index.js":"35","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\CrudAccount\\index.js":"36","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\HomeSetting\\index.js":"37","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\CrudProduct\\index.js":"38","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Search\\index.js":"39","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\TermsUserAgreement\\index.js":"40","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Search\\Result\\index.js":"41","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Search\\Advanced\\index.js":"42","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ReturnPolicy\\index.js":"43","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ShippingPolicy\\index.js":"44","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\PrivacyPolicy\\index.js":"45","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ContactUs\\index.js":"46","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\NewHome\\index.js":"47","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\FFLDealer\\index.js":"48","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\ZanderCard.js":"49","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\LipseyCard.js":"50","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\ImageMagnifier.js":"51","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Components\\PersonalizedRecommendations\\index.js":"52","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MyWishlist\\index.js":"53"},{"size":563,"mtime":1721844670666,"results":"54","hashOfConfig":"55"},{"size":375,"mtime":1721844670666,"results":"56","hashOfConfig":"55"},{"size":2977,"mtime":1721844670580,"results":"57","hashOfConfig":"55"},{"size":549,"mtime":1721844670580,"results":"58","hashOfConfig":"55"},{"size":77,"mtime":1721844670611,"results":"59","hashOfConfig":"55"},{"size":134,"mtime":1721909181841,"results":"60","hashOfConfig":"55"},{"size":5548,"mtime":1722214231008,"results":"61","hashOfConfig":"55"},{"size":917,"mtime":1721844670610,"results":"62","hashOfConfig":"55"},{"size":8041,"mtime":1721936595420,"results":"63","hashOfConfig":"55"},{"size":202,"mtime":1721844670588,"results":"64","hashOfConfig":"55"},{"size":2652,"mtime":1721844670585,"results":"65","hashOfConfig":"55"},{"size":3357,"mtime":1721844670585,"results":"66","hashOfConfig":"55"},{"size":339,"mtime":1721844670585,"results":"67","hashOfConfig":"55"},{"size":176,"mtime":1721844670609,"results":"68","hashOfConfig":"55"},{"size":8070,"mtime":1721844670609,"results":"69","hashOfConfig":"55"},{"size":4705,"mtime":1721844670603,"results":"70","hashOfConfig":"55"},{"size":2612,"mtime":1721844670597,"results":"71","hashOfConfig":"55"},{"size":6530,"mtime":1721926063548,"results":"72","hashOfConfig":"55"},{"size":7208,"mtime":1721844670596,"results":"73","hashOfConfig":"55"},{"size":1096,"mtime":1721844670612,"results":"74","hashOfConfig":"55"},{"size":608,"mtime":1721844670588,"results":"75","hashOfConfig":"55"},{"size":3896,"mtime":1721844670586,"results":"76","hashOfConfig":"55"},{"size":9634,"mtime":1721971267372,"results":"77","hashOfConfig":"55"},{"size":1409,"mtime":1721844670611,"results":"78","hashOfConfig":"55"},{"size":1920,"mtime":1721844670593,"results":"79","hashOfConfig":"55"},{"size":848,"mtime":1721844670584,"results":"80","hashOfConfig":"55"},{"size":1070,"mtime":1721844670582,"results":"81","hashOfConfig":"55"},{"size":8367,"mtime":1721844670600,"results":"82","hashOfConfig":"55"},{"size":2880,"mtime":1721844670599,"results":"83","hashOfConfig":"55"},{"size":12032,"mtime":1722302601481,"results":"84","hashOfConfig":"55"},{"size":4300,"mtime":1722118367990,"results":"85","hashOfConfig":"55"},{"size":14882,"mtime":1721844670594,"results":"86","hashOfConfig":"55"},{"size":467,"mtime":1721844670589,"results":"87","hashOfConfig":"55"},{"size":15740,"mtime":1721844670603,"results":"88","hashOfConfig":"55"},{"size":5306,"mtime":1721844670592,"results":"89","hashOfConfig":"55"},{"size":25387,"mtime":1721844670590,"results":"90","hashOfConfig":"55"},{"size":9831,"mtime":1721844670592,"results":"91","hashOfConfig":"55"},{"size":44208,"mtime":1721844670591,"results":"92","hashOfConfig":"55"},{"size":3435,"mtime":1721937846310,"results":"93","hashOfConfig":"55"},{"size":28025,"mtime":1721844670608,"results":"94","hashOfConfig":"55"},{"size":16871,"mtime":1721844670606,"results":"95","hashOfConfig":"55"},{"size":9960,"mtime":1721979092798,"results":"96","hashOfConfig":"55"},{"size":2576,"mtime":1721844670604,"results":"97","hashOfConfig":"55"},{"size":11433,"mtime":1721844670607,"results":"98","hashOfConfig":"55"},{"size":46828,"mtime":1721844670602,"results":"99","hashOfConfig":"55"},{"size":7070,"mtime":1721844670595,"results":"100","hashOfConfig":"55"},{"size":8304,"mtime":1721962508591,"results":"101","hashOfConfig":"55"},{"size":8424,"mtime":1721844670597,"results":"102","hashOfConfig":"55"},{"size":2511,"mtime":1721844670583,"results":"103","hashOfConfig":"55"},{"size":2546,"mtime":1721923605095,"results":"104","hashOfConfig":"55"},{"size":2711,"mtime":1721844670581,"results":"105","hashOfConfig":"55"},{"size":1391,"mtime":1721844670595,"results":"106","hashOfConfig":"55"},{"size":2342,"mtime":1721844670600,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"16qe4k9",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"110"},"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\index.js",[],["240","241"],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\App.js",["242"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { IntlProvider } from 'react-intl';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppLayout from './AppLayout';\r\nimport UserContext from \"./utils/UserContext\";\r\nimport constant from './utils/constant';\r\nimport apis from \"./api\";\r\nimport { Spin } from 'antd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n\r\n  const [cart, setCart] = useState([]);\r\n  const [spinning, setSpinning] = useState(false);\r\n  const [customerId, setCustomerId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getOrCreateCustomerId = () => {\r\n      let customerId = Cookies.get('customerId');\r\n      if (!customerId) {\r\n        customerId = uuidv4();\r\n        Cookies.set('customerId', customerId, { expires: 30 });\r\n      }\r\n      return customerId;\r\n    }\r\n\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"aotacticalToken\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"aotacticalToken\", \"\");\r\n        localStorage.setItem(\"aotacticalRole\", \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenRes = await apis.checkLogin(token);\r\n      if (tokenRes.data) {\r\n        const userRes = await Axios.post(constant.BACKEND_URL + \"/users/getUser\", null, {\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n        setCustomerId(userRes.data.id);\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n      } else {\r\n        setCustomerId(getOrCreateCustomerId());\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const saveCartToServer = async () => {\r\n      await apis.addToCart({\r\n        id: customerId,\r\n        cart: cart\r\n      })\r\n    }\r\n\r\n    if(cart.length > 0) {\r\n      saveCartToServer()\r\n    }\r\n  }, [cart])\r\n\r\n  return (\r\n    <IntlProvider locale=\"en\">\r\n      <Router>\r\n        <UserContext.Provider value={{ userData, setUserData, cart, setCart, customerId, setSpinning }}>\r\n          {\r\n            spinning && <div style={{\r\n              position: 'fixed',\r\n              top: 0,\r\n              left: 0,\r\n              width: '100%',\r\n              height: '100%',\r\n              backgroundColor: 'rgba(255, 255, 255, 0)',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              zIndex: 9999\r\n            }}>\r\n              <div style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n                <Spin style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', }} size=\"large\" spinning={true} fullscreen />\r\n              </div>\r\n            </div>\r\n          }\r\n          <AppLayout />\r\n        </UserContext.Provider>\r\n      </Router>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\AppLayout.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\UserContext.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\constant.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\api\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\RouteUtils.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\config\\routes.config.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout3.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout2.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout1.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Vendor\\ManageProduct\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Vendor\\VendorSignup\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ResetPassword\\index.js",["243","244"],"import { Form, Input, message } from 'antd';\r\nimport React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from \"react-router-dom\"\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n    const history = useHistory();\r\n    const { token } = useParams();\r\n    const [form] = Form.useForm();\r\n    const [isSet, setIsSet] = useState(false)\r\n\r\n    const onPasswordChange = (ev) => {\r\n        form.setFieldsValue({\r\n            password: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPasswordCheckChange = (ev) => {\r\n        form.setFieldsValue({\r\n            passwordCheck: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.password || values.password === \"\") {\r\n            toast.warning(\"Please input password!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }else{\r\n            if(values.password.length < 6) {\r\n                toast.warning(\"The password needs to be at least 6 characters long!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n                return;\r\n            }\r\n        }\r\n        if (!values.passwordCheck || values.passwordCheck === \"\") {\r\n            if (values.password !== values.passwordCheck) {\r\n                toast.warning(\"Please input correct password and match!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n                return;\r\n            }\r\n\r\n            toast.warning(\"Please input password check!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let password = values.password;\r\n        let passwordCheck = values.passwordCheck;\r\n        \r\n        try {\r\n            const res = await apis.resetPassword({\r\n                newPassword: password,\r\n                passwordCheck: passwordCheck,\r\n                token\r\n            })\r\n\r\n            if(res.data.success) {\r\n                setIsSet(true)\r\n                setTimeout(() => {\r\n                    window.location.href = \"/login\"\r\n                }, 3000)\r\n            }\r\n        } catch(e) {\r\n            message.error(e.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-page\">\r\n            <ToastContainer />\r\n            {\r\n                !isSet && <Form\r\n                    form={form}\r\n                    name=\"control-hooks\"\r\n                    style={{\r\n                        maxWidth: 600,\r\n                        display: 'block'\r\n                    }}\r\n                >\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"New Password\"\r\n                        placeholder=\"At least 6 characters\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password\r\n                            onChange={onPasswordChange}\r\n                            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"passwordCheck\"\r\n                        label=\"Password Check\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password\r\n                            onChange={onPasswordCheckChange}\r\n                            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <div className='auth-btn' onClick={onSubmit}>\r\n                        Submit\r\n                    </div>\r\n\r\n                    <br />\r\n                    <Link to=\"/login\">Back to Sign In</Link>\r\n                </Form>\r\n            }\r\n            {\r\n                isSet && <div>\r\n                    <h4>The password has been reset successfully. You will be redirect to Sign In page...</h4>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ForgotPassword\\index.js",["245","246"],"import { Form, Input, message } from 'antd';\r\nimport React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst ForgotPassword = () => {\r\n    const [form] = Form.useForm();\r\n    const [isSent, setIsSent] = useState(false)\r\n\r\n    const onEmailChange = (ev) => {\r\n        form.setFieldsValue({\r\n            email: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onRequest = async (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.email || values.email === \"\") {\r\n            toast.warning(\"Please input email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let email = values.email;\r\n        \r\n        try {\r\n            const res = await apis.forgotPassword({\r\n                email: email\r\n            })\r\n\r\n            if(res.data.success) {\r\n                setIsSent(true)\r\n            }\r\n        } catch(e) {\r\n            message.error(e.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-page\">\r\n            <ToastContainer />\r\n            {\r\n                !isSent && <Form\r\n                    form={form}\r\n                    name=\"control-hooks\"\r\n                    style={{\r\n                        maxWidth: 600,\r\n                        display: 'block'\r\n                    }}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input onChange={onEmailChange} />\r\n                    </Form.Item>\r\n\r\n                    <div className='auth-btn' onClick={onRequest}>\r\n                        Request\r\n                    </div>\r\n                </Form>\r\n            }\r\n            {\r\n                isSent && <div>\r\n                    <h4 style={{marginBottom: '0'}}>The reset password link has been successfully sent to your email. It will take some time to arrive into your email if you don't receive the email yet.</h4>\r\n                    <br />\r\n                    <Link to=\"/login\">Back to Sign In</Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Signin\\index.js",["247","248","249","250"],"import { Form, Input, message } from 'antd';\r\nimport React, { useState, useContext } from 'react';\r\nimport { EyeInvisibleOutlined, EyeTwoTone, FacebookFilled } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from \"react-router-dom\"\r\nimport UserContext from '../../utils/UserContext';\r\n\r\nconst Signin = () => {\r\n    const { setSpinning, customerId } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [form] = Form.useForm();\r\n    const [showOtpField, setShowOtpField] = useState(false);\r\n    const [otp, setOtp] = useState('');\r\n    const [response, setRes] = useState(null);\r\n\r\n    const signin = async (param) => {\r\n        try {\r\n            setSpinning(true)\r\n            const res = await apis.customerSignin(param)\r\n            setSpinning(false)\r\n            if(res.status === 200) {\r\n                if(res.data?.user?.role === 'admin') {\r\n                    localStorage.setItem(\"aotacticalToken\", res.data?.token)\r\n                    localStorage.setItem(\"aotacticalRole\", res.data?.user?.role)\r\n                    // history.push(\"/product-crud\")\r\n                    window.location.href = \"/product-crud\"\r\n                }else if(res.data?.token){\r\n                    localStorage.setItem(\"aotacticalToken\", res.data?.token)\r\n                    localStorage.setItem(\"aotacticalRole\", res.data?.user?.role)\r\n                    // history.push(\"/\")\r\n                    window.location.href = \"/\"\r\n                }else{\r\n                    setRes(res.data)\r\n                    setShowOtpField(true);\r\n                    message.info('OTP sent to your email. Check your inbox.');\r\n                }\r\n            }\r\n        } catch(e) {\r\n            setSpinning(false)\r\n            message.error(e.response.data.msg);\r\n        }\r\n    }\r\n\r\n    const resendOTP = async () => {\r\n        const values = form.getFieldsValue();\r\n\r\n        let email = values.email;\r\n        let password = values.password;\r\n\r\n        signin({\r\n            email: email,\r\n            password: password\r\n        });\r\n    }\r\n\r\n    const onEmailChange = (ev) => {\r\n        form.setFieldsValue({\r\n            email: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPasswordChange = (ev) => {\r\n        form.setFieldsValue({\r\n            password: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onSignIn = (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.email || values.email === \"\") {\r\n            toast.warning(\"Please input email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.password || values.password === \"\") {\r\n            toast.warning(\"Please input password!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let email = values.email;\r\n        let password = values.password;\r\n\r\n        signin({\r\n            email: email,\r\n            password: password,\r\n            customerId: customerId\r\n        });\r\n    };\r\n \r\n    const handleOtpVerification = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.handleOtpVerification({\r\n            otp\r\n        })\r\n        setSpinning(false)\r\n        if(res.status === 200) {\r\n            localStorage.setItem(\"aotacticalToken\", res.data.token)\r\n            localStorage.setItem(\"aotacticalRole\", res.data.user?.role)\r\n            const { role } = res.data.user;\r\n            if(role === 'admin')\r\n                window.location.href = \"/product-crud\"\r\n            else if(role === 'vendor')\r\n                window.location.href = \"/vendor-product\"\r\n            else\r\n                window.location.href = \"/\"\r\n        }else{\r\n            message.error('Something went wrong!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-page\">\r\n            <ToastContainer />\r\n            <Form\r\n                form={form}\r\n                name=\"control-hooks\"\r\n                style={ !showOtpField ? {\r\n                    maxWidth: 600,\r\n                    display: 'block'\r\n                } : {display: 'none'}}\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input onChange={onEmailChange} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        onChange={onPasswordChange}\r\n                        iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                    />\r\n                </Form.Item>\r\n                <div className='auth-btn' onClick={onSignIn}>\r\n                    Sign In\r\n                </div>\r\n                <div style={{marginTop: '20px', display: 'flex', justifyContent: 'space-between'}}>\r\n                    <div>\r\n                        New Customer? <Link to=\"/customer-register\">Start here</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/forgot-password\" style={{color: '#ff4d4f'}}>Forgot Password?</Link>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n            {   \r\n                showOtpField && (\r\n                    <>\r\n                        <Input type=\"text\" placeholder=\"OTP\" onChange={(e) => setOtp(e.target.value)} />\r\n                        <div className='auth-btn' style={{marginTop: '1rem'}} onClick={handleOtpVerification}>\r\n                            Verify OTP\r\n                        </div>\r\n                        <div style={{marginTop: '1rem'}}>\r\n                            <span>Haven't you received OTP?</span>\r\n                            <a onClick={resendOTP} style={{marginLeft: '5px', textDecoration: 'underline'}}>Resend OTP</a>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signin;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Customer\\CustomerSignup\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\images.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\components\\Logout\\index.js",["251"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Logout = () => {\r\n    const history = useHistory()\r\n\r\n    const logout = () => {\r\n        localStorage.setItem(\"aotacticalToken\", \"\");\r\n        localStorage.setItem(\"aotacticalRole\", \"\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <a onClick={logout} style={{\r\n            fontSize: '18px',\r\n            display: 'inline-block',\r\n            marginLeft: '15px',\r\n            marginRight: '15px',\r\n            color: '#fff'\r\n        }}>\r\n            Logout\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Logout;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\components\\Footer\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\components\\Header\\index.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport images from \"../../../utils/images\";\r\nimport {\r\n    ShoppingCartOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { Input, Select, Drawer, Button } from 'antd';\r\nimport categories from '../../../utils/category';\r\nimport Cart from '../../../pages/Cart';\r\nimport UserContext from '../../../utils/UserContext';\r\nimport { Link, useLocation, BrowserRouter as Router, useHistory } from 'react-router-dom';\r\nimport apis from '../../../api';\r\n\r\nconst { Search } = Input;\r\n\r\nconst Logo = () => {\r\n    return <Link to=\"/\" className='logo-container'>\r\n        <LazyLoadImage\r\n            alt={images.logo.alt}\r\n            src={images.logo.src}\r\n            style={{\r\n                maxWidth: '100%'\r\n            }}\r\n        />\r\n    </Link>;\r\n}\r\n\r\nconst ProductSearch = () => {\r\n    const history = useHistory();\r\n    const [category, setCategory] = useState(\"All\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [isAdvancedSearch, setIsAdvancedSearch] = useState(false);\r\n    const location = useLocation();\r\n\r\n    const queryParameters = new URLSearchParams(location.search)\r\n\r\n    const handleChange = (value) => {\r\n        setCategory(value)\r\n    };\r\n\r\n    const onSearchChange = (ev) => {\r\n        setSearch(ev.target.value)\r\n    }\r\n\r\n    const onSearch = (value, _e, info) => {\r\n        if (!isAdvancedSearch) {\r\n            if (category !== 'All' || value !== '')\r\n                history.push(`/search/${category}/${value}`)\r\n        } else {\r\n            const wordOption = queryParameters.get('wordOption');\r\n            const exclude = queryParameters.get('exclude');\r\n            const upc = queryParameters.get('upc');\r\n            const fromPrice = queryParameters.get('fromPrice');\r\n            const toPrice = queryParameters.get('toPrice');\r\n            const sortBy = queryParameters.get('sortBy');\r\n            const itemPerPage = queryParameters.get('itemPerPage');\r\n\r\n            let route = '/advanced-search-result?'\r\n            if (search != \"\")\r\n                route += 'word' + \"=\" + search + '&'\r\n            if (wordOption && wordOption != \"\")\r\n                route += 'wordOption' + \"=\" + wordOption + '&'\r\n            if (exclude && exclude != \"\")\r\n                route += 'exclude' + \"=\" + exclude + '&'\r\n            if (upc && upc != \"\")\r\n                route += 'upc' + \"=\" + upc + '&'\r\n            if (fromPrice && fromPrice != \"\")\r\n                route += 'fromPrice' + \"=\" + fromPrice + '&'\r\n            if (toPrice && toPrice != \"\")\r\n                route += 'toPrice' + \"=\" + toPrice + '&'\r\n            if (category != \"\")\r\n                route += 'category' + \"=\" + category + '&'\r\n            if (sortBy && sortBy != \"\")\r\n                route += 'sortBy' + \"=\" + sortBy + '&'\r\n            if (itemPerPage && itemPerPage != \"\")\r\n                route += 'itemPerPage' + \"=\" + itemPerPage + '&'\r\n\r\n            history.push(route)\r\n        }\r\n    };\r\n\r\n    const productSearchConatiner = {\r\n        display: 'flex'\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.location.pathname.includes(\"/search\")) {\r\n            setCategory(window.location.pathname.split(\"/search/\")[1].split(\"/\")[0])\r\n            if (window.location.pathname.split(\"/search/\")[1].split(\"/\")[1]) {\r\n                setSearch(window.location.pathname.split(\"/search/\")[1].split(\"/\")[1])\r\n            } else {\r\n                setSearch(\"\")\r\n            }\r\n        } else {\r\n            setCategory(\"All\")\r\n            setSearch(\"\")\r\n        }\r\n\r\n        if (window.location.pathname.includes(\"/advanced-search-result\")) {\r\n            setSearch(queryParameters.get('word'))\r\n            const category = queryParameters.get('category');\r\n            if (!category || category === 'all') {\r\n                setCategory(\"All\")\r\n            } else {\r\n                setCategory(category)\r\n            }\r\n            setIsAdvancedSearch(true)\r\n        } else {\r\n            setIsAdvancedSearch(false)\r\n        }\r\n    }, [location])\r\n\r\n    return <div className='product-search_container' style={productSearchConatiner}>\r\n        <Select\r\n            defaultValue=\"All\"\r\n            style={{\r\n                width: 200,\r\n            }}\r\n            value={category}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n            options={categories}\r\n        />\r\n        <Search\r\n            placeholder=\"Search Product\"\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            value={search}\r\n            onChange={onSearchChange}\r\n            onSearch={onSearch}\r\n        />\r\n        <Link to={\"/advanced-search\"} style={{ color: '#f3a847', fontSize: '15px', lineHeight: '40px', marginLeft: '10px' }}>Advanced</Link>\r\n    </div>;\r\n}\r\n\r\nconst Account = () => {\r\n    // const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const { userData, customerId, setCart } = useContext(UserContext);\r\n\r\n    const showDrawer = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const Acct = () => {\r\n        return <div className='account' style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginLeft: '20px',\r\n            position: 'relative'\r\n        }} onClick={showDrawer}>\r\n            <UserOutlined\r\n                style={{\r\n                    fontSize: '24px',\r\n                }}\r\n            />\r\n            <span style={{\r\n                fontSize: '18px',\r\n                display: 'inline-block',\r\n                marginLeft: '5px'\r\n            }}>\r\n                Account\r\n            </span>\r\n        </div>\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCartForCustomer = async () => {\r\n            const res = await apis.getCartForCustomer({\r\n                id: customerId\r\n            })\r\n            setCart(res.data.result?.cart)\r\n\r\n            // if(res.data.result?.logs.length > 0) {\r\n            //     history.push(res.data.result?.logs[0].page)\r\n            // }\r\n        }\r\n\r\n        if (customerId) {\r\n            getCartForCustomer()\r\n        }\r\n    }, [customerId])\r\n\r\n    const AdminInfo = () => {\r\n        return userData.user?.id === 0 && <div style={{}}>\r\n            <div>\r\n                <h2>You're an {userData.user.fullName}</h2>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const NotLogin = () => {\r\n        return !userData.token && <div style={{}}>\r\n            <div>\r\n                <h4>Registered Users</h4>\r\n                <p style={{ color: 'rgba(0, 0, 0, 0.85)' }}>Have an account? Sign in now.</p>\r\n                <Link to=\"/login\">Sign In</Link>\r\n            </div>\r\n            <hr style={{ margin: '1.5rem 0' }} />\r\n            <div>\r\n                <h4>New Customer</h4>\r\n                <p style={{ color: 'rgba(0, 0, 0, 0.85)' }}>New to AO Tactical? Create an account to get started today.</p>\r\n                <Link to=\"/customer-register\">Create an Account</Link>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const Login = () => {\r\n        const logout = () => {\r\n            localStorage.setItem(\"aotacticalToken\", \"\");\r\n            localStorage.setItem(\"aotacticalRole\", \"\");\r\n            window.location.href = \"/\"\r\n        }\r\n\r\n        return userData.token ? <div style={{}}>\r\n            <div>\r\n                <h3 style={{ fontWeight: 'bold' }}>Account</h3>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <Link onClick={onClose} style={{ color: 'rgba(0, 0, 0, 0.85)' }} to=\"/my-cart\">View Cart</Link>\r\n                </div>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <Link onClick={onClose} style={{ color: 'rgba(0, 0, 0, 0.85)' }} to=\"/my-wishlist\">My Wishlist</Link>\r\n                </div>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <Link onClick={onClose} style={{ color: 'rgba(0, 0, 0, 0.85)' }} to=\"/my-recent\">Recently Viewed</Link>\r\n                </div>\r\n                <div style={{ marginBottom: '30px' }}>\r\n                    <Link onClick={onClose} style={{ color: 'rgba(0, 0, 0, 0.85)' }} to=\"/my-setting\">Setting</Link>\r\n                </div>\r\n                <hr />\r\n                <a onClick={logout} style={{\r\n                    color: 'rgba(0, 0, 0, 0.85)'\r\n                }}>\r\n                    Logout\r\n                </a>\r\n            </div>\r\n        </div> : <div></div>\r\n    }\r\n\r\n    return <div className='account-container' style={{ display: 'flex' }}>\r\n        <Cart />\r\n        <Acct />\r\n        <Drawer\r\n            title={userData.user ? 'Welcome, ' + userData.user.fullName : 'Account'}\r\n            minWidth={350}\r\n            onClose={onClose}\r\n            getContainer={false}\r\n            visible={open}\r\n            styles={{\r\n                body: {\r\n                    paddingBottom: 80,\r\n                },\r\n            }}\r\n        >\r\n            <AdminInfo />\r\n            <NotLogin />\r\n            <Login />\r\n        </Drawer>\r\n    </div>\r\n}\r\n\r\nconst Header = () => {\r\n    return <>\r\n        <header>\r\n            <div className='desktop-header'>\r\n                <Logo />\r\n                <ProductSearch />\r\n                <Account />\r\n            </div>\r\n            <div className='mobile-header'>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <Logo />\r\n                    <Account />\r\n                </div>\r\n                <ProductSearch />\r\n            </div>\r\n        </header>\r\n    </>;\r\n}\r\n\r\nexport default Header;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\utils\\category.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Cart\\index.js",["276","277"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from '../../utils/UserContext';\r\nimport {\r\n    ShoppingCartOutlined\r\n} from '@ant-design/icons';\r\nimport { useHistory  } from 'react-router-dom'; \r\n\r\nconst Cart = () => {\r\n    const { cart, setCart } = useContext(UserContext);\r\n    const [cartCnt, setCartCnt] = useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let cnt = 0\r\n        cart.map(ct => {\r\n            cnt += ct.cartCnt\r\n        })\r\n        setCartCnt(cnt)\r\n    }, [cart]);\r\n\r\n    const goToCart = () => {\r\n        history.push(\"/my-cart\")\r\n    }\r\n\r\n    return (\r\n        <div className='cart' style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            position: 'relative'\r\n        }} onClick={goToCart}>\r\n            <ShoppingCartOutlined \r\n                style={{\r\n                    fontSize: '24px',\r\n                }} \r\n            />\r\n            <span style={{\r\n                fontSize: '18px',\r\n                display: 'inline-block',\r\n                marginLeft: '5px'\r\n            }}>\r\n                Cart\r\n            </span>\r\n            {\r\n                cartCnt > 0 && <span style={{\r\n                    display: 'inline-block',\r\n                    position: 'absolute',\r\n                    zIndex: '1',\r\n                    backgroundColor: '#ffd814',\r\n                    width: '15px',\r\n                    height: '18px',\r\n                    textAlign: 'center',\r\n                    fontSize: '16px',\r\n                    lineHeight: '16px',\r\n                    borderRadius: '10px',\r\n                    color: 'rgb(199, 81, 31)',\r\n                    fontWeight: 'bold',\r\n                    top: '-5px',\r\n                    left: '13px'\r\n                }}>\r\n                    {cartCnt}\r\n                </span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\layouts\\Layout.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\Loading.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MySetting\\index.js",["278","279","280","281"],"import React, { useEffect, useContext, useState, Children } from \"react\";\r\nimport UserContext from \"../../utils/UserContext\";\r\nimport api from '../../api';\r\nimport { Button, Form, Input, message, Switch } from 'antd';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\n\r\nconst MySetting = () => {\r\n    const { userData, setSpinning, customerId } = useContext(UserContext);\r\n    const [form] = Form.useForm();\r\n    const [emailOtp, setEmailOtp] = useState(true);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"aotacticalToken\");\r\n\r\n        const getUserInfo = async () => {\r\n            setSpinning(true)\r\n            const res = await api.getUserInfo(token)\r\n            setSpinning(false)\r\n\r\n            form.setFieldsValue({\r\n                fullName: res.data.fullName,\r\n                username: res.data.username,\r\n                email: res.data.email,\r\n                phone: res.data.phone,\r\n                address: res.data.address,\r\n                password: '',\r\n                passwordCheck: ''\r\n            });\r\n            setEmailOtp(res.data.otp)\r\n        }\r\n\r\n        getUserInfo()\r\n    }, [userData])\r\n\r\n    // page log\r\n    useEffect(() => {\r\n        const pageLog = async () => {\r\n            await api.addPageLog({\r\n                customerId,\r\n                page: '/my-setting'\r\n            })\r\n        }\r\n\r\n        pageLog()\r\n    }, [customerId])\r\n\r\n    const onFullNameChange = (ev) => {\r\n        form.setFieldsValue({\r\n            fullName: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onUserNameChange = (ev) => {\r\n        form.setFieldsValue({\r\n            username: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onEmailChange = (ev) => {\r\n        form.setFieldsValue({\r\n            email: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPhoneChange = (ev) => {\r\n        form.setFieldsValue({\r\n            phone: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onAddressChange = (ev) => {\r\n        form.setFieldsValue({\r\n            address: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPasswordChange = (ev) => {\r\n        form.setFieldsValue({\r\n            password: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPasswordCheckChange = (ev) => {\r\n        form.setFieldsValue({\r\n            passwordCheck: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onOtpChange = (checked) => {\r\n        setEmailOtp(checked);\r\n    };\r\n\r\n    const saveEdit = async (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.fullName || values.fullName === \"\") {\r\n            toast.warning(\"Please input full name!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.username || values.username === \"\") {\r\n            toast.warning(\"Please input username!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.email || values.email === \"\") {\r\n            toast.warning(\"Please input email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if(values.password && values.password.length < 6) {\r\n            toast.warning(\"The password needs to be at least 6 characters long!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(values.password) {\r\n            if (!values.passwordCheck || values.passwordCheck === \"\") {\r\n                toast.warning(\"Please input password check!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n                return;\r\n            }else{\r\n                if (values.password !== values.passwordCheck) {\r\n                    toast.warning(\"Please input correct password and match!\", {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                    return;\r\n                }       \r\n            }\r\n        }\r\n\r\n        let fullName = values.fullName;\r\n        let userName = values.userName;\r\n        let email = values.email;\r\n        let password = values.password;\r\n        let passwordCheck = values.passwordCheck;\r\n        let phone = values.phone;\r\n        let address = values.address;\r\n        let isOtp = emailOtp;\r\n\r\n        if(password && password != \"\") {\r\n            setSpinning(true)\r\n            await api.updateAccountInfo({\r\n                fullName,\r\n                userName,\r\n                email,\r\n                password,\r\n                passwordCheck,\r\n                phone,\r\n                address,\r\n                isOtp\r\n            })\r\n            setSpinning(false)\r\n        }else{\r\n            setSpinning(true)\r\n            await api.updateAccountInfo({\r\n                fullName,\r\n                userName,\r\n                email,\r\n                phone,\r\n                address,\r\n                isOtp\r\n            })\r\n            setSpinning(false)\r\n        }\r\n\r\n        closeEdit()\r\n    };\r\n\r\n    const onFinish = (values) => { };\r\n\r\n    const edit = () => {\r\n        setIsEdit(true)\r\n    }\r\n\r\n    const closeEdit = () => {\r\n        setIsEdit(false)\r\n        form.setFieldsValue({\r\n            password: '',\r\n            passwordCheck: ''\r\n        });\r\n    }\r\n\r\n    return <div className=\"my-setting\">\r\n        <ToastContainer />\r\n        <h4>You can edit your personal information.</h4>\r\n        <Form\r\n            form={form}\r\n            name=\"control-hooks\"\r\n            onFinish={onFinish}\r\n            style={{\r\n                maxWidth: 600,\r\n                marginTop: '2rem'\r\n            }}\r\n        >\r\n            <Form.Item\r\n                name=\"fullName\"\r\n                label=\"Full Name\"\r\n            >\r\n                <Input onChange={onFullNameChange} disabled={!isEdit} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"Email\"\r\n            >\r\n                <Input onChange={onEmailChange} disabled={!isEdit} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"User Name\"\r\n            >\r\n                <Input onChange={onUserNameChange} disabled={!isEdit} />\r\n            </Form.Item>\r\n            {\r\n                isEdit && <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    placeholder=\"At least 6 characters\"\r\n                >\r\n                    <Input.Password\r\n                        onChange={onPasswordChange}\r\n                        iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                    />\r\n                </Form.Item>\r\n            }\r\n            {\r\n                isEdit && <Form.Item\r\n                    name=\"passwordCheck\"\r\n                    label=\"Password Check\"\r\n                >\r\n                    <Input.Password\r\n                        onChange={onPasswordCheckChange}\r\n                        iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                    />\r\n                </Form.Item>\r\n            }\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone\"\r\n            > \r\n                <Input onChange={onPhoneChange} disabled={!isEdit} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"address\"\r\n                label=\"Address\"\r\n            > \r\n                <Input onChange={onAddressChange} disabled={!isEdit} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"emailOtp\"\r\n                label=\"Email OTP\"\r\n            >\r\n                <Switch checkedChildren=\"Enabled\" unCheckedChildren=\"Disabled\" checked={emailOtp} onChange={onOtpChange} disabled={!isEdit} />\r\n            </Form.Item>\r\n        </Form>\r\n        {\r\n            isEdit ? <div>\r\n                <Button onClick={saveEdit} style={{marginRight: '10px'}}>Save</Button>\r\n                <Button danger onClick={closeEdit}>Cancel</Button>\r\n            </div> : <Button type=\"dashed\" onClick={edit}>Edit</Button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default MySetting;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MyRecent\\index.js",["282","283","284"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport ZanderCard from '../../components/ui/ZanderCard';\r\nimport LipseyCard from '../../components/ui/LipseyCard';\r\nimport PersonalizedRecommendations from \"../Components/PersonalizedRecommendations\";\r\nimport UserContext from \"../../utils/UserContext\";\r\n\r\nconst productList = {\r\n    margin: '40px auto 40px auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'stretch',\r\n    gap: '20px'\r\n}\r\n\r\nconst MyRecent = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const { setSpinning, customerId } = useContext(UserContext);\r\n\r\n    useEffect(async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getRecentForCustomer({\r\n            id: customerId\r\n        });\r\n        if(res.data.result.length > 0)\r\n            setProducts(res.data.result)\r\n\r\n        setSpinning(false)\r\n\r\n        const pageLog = async () => {\r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: '/my-recent'\r\n            })\r\n        }\r\n        pageLog()\r\n    }, [customerId]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"products:\", products)\r\n    // }, [products])\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div style={{ maxWidth: '1440px', margin: '40px auto' }}>\r\n                <div style={{paddingLeft: '20px'}}>\r\n                    \r\n                </div>\r\n                <div className='product-list' style={productList}>\r\n                    {/* {\r\n                        products.length !== 0 && products.map(p => {\r\n                            return <ZanderCard key={p._id} product={p} />\r\n                            // if(p.isZander) \r\n                            //     return <ZanderCard key={p._id} product={p} />\r\n                            // if(p.isLipsey) \r\n                            //     return <LipseyCard key={p._id} product={p} />\r\n                        })\r\n                    } */}\r\n                    {\r\n                        products.length !== 0 && products.map(p => {\r\n                            return p.isZander && <ZanderCard key={p._id} product={p} />\r\n                        })\r\n                    }\r\n                    {\r\n                        products.length !== 0 && products.map(p => {\r\n                            return p.isLipsey && <LipseyCard key={p._id} product={p} />\r\n                        })\r\n                    }\r\n                    {\r\n                        products.length === 0 && <div style={{marginLeft: '5px'}}>No Recently Viewed Products</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <PersonalizedRecommendations />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyRecent;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MyCart\\index.js",["285","286","287"],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Payment\\index.js",["288","289","290"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport apis from '../../api';\r\nimport {Input , Select, Button, message} from 'antd';\r\n\r\nconst Payment = () => {\r\n    const[expireMonth, setExpireMonth] = useState();\r\n    const[expireYear, setExpireYear] = useState();\r\n    const[cardNumber, setCardNumber] = useState(\"\");\r\n    const[cardName, setCardName] = useState(\"\");\r\n    const[cardCVV, setCardCVV] = useState(\"\");\r\n    const months=[\r\n        {value: \"01\", label: \"01\"},\r\n        {value: \"02\", label: \"02\"},\r\n        {value: \"03\", label: \"03\"},\r\n        {value: \"04\", label: \"04\"},\r\n        {value: \"05\", label: \"05\"},\r\n        {value: \"06\", label: \"06\"},\r\n        {value: \"07\", label: \"07\"},\r\n        {value: \"08\", label: \"08\"},\r\n        {value: \"09\", label: \"09\"},\r\n        {value: \"10\", label: \"10\"},\r\n        {value: \"11\", label: \"11\"},\r\n        {value: \"12\", label: \"12\"}\r\n    ];\r\n    const years=[\r\n        {value: \"2024\", label: \"2024\"},\r\n        {value: \"2025\", label: \"2025\"},\r\n        {value: \"2026\", label: \"2026\"},\r\n        {value: \"2027\", label: \"2027\"},\r\n        {value: \"2028\", label: \"2028\"},\r\n        {value: \"2029\", label: \"2029\"},\r\n        {value: \"2030\", label: \"2030\"}\r\n    ];\r\n    const onChangeName = (e) => {\r\n        setCardName(e.target.value);\r\n    }\r\n    const onChangeNumber = (e) => {\r\n        setCardNumber(e.target.value);\r\n    }\r\n    const onChangeCVV = (e) => {\r\n        setCardCVV(e.target.value);\r\n    }\r\n    const onChangeMonth = (value)=>{\r\n        setExpireMonth(value);\r\n    }\r\n    const onChangeYear =(value) =>{\r\n        setExpireYear(value);\r\n    }\r\n    const onClickConfirm = async () =>{\r\n        try{\r\n            const res = await apis.addpayment({\r\n                \"cardName\" : cardName, \r\n                \"cardNumber\" : cardNumber, \r\n                \"expireMonth\" : expireMonth, \r\n                \"expireYear\" : expireYear, \r\n                \"cardCVV\" : cardCVV\r\n            });\r\n            // if(res.data.success) {\r\n                \r\n            // }\r\n\r\n        }catch(e){\r\n            message.error(e.response.data);\r\n        }\r\n            \r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"payment\">\r\n                Please connect your card to proceed the payment\r\n                <div className='card-container'>\r\n                    <div className='card-detail'>Card Detail</div>\r\n                    <div className='card-name-container'>\r\n                        <div className='card-name-title'>Name (as it appears on card)</div>\r\n                        <Input onChange={onChangeName} value={cardName}/>\r\n                    </div>\r\n                    <div className='card-number-container'>\r\n                        <div className='card-number-title'>Card Number</div>\r\n                        <Input onChange={onChangeNumber} value={cardNumber}/>\r\n                    </div>\r\n                    <div className='expire-container'>\r\n                        <div className='expire-title'>Expire Date</div>\r\n                        <div className='expire-date-container'>\r\n                            <Select\r\n                                className='expire-month-select'\r\n                                value={expireMonth}\r\n                                placeholder=\"Month\"\r\n                                onChange={onChangeMonth}\r\n                                options={months}\r\n                            />\r\n                            <Select\r\n                                className='expire-year-select'\r\n                                value={expireYear}\r\n                                placeholder=\"Year\"\r\n                                onChange={onChangeYear}\r\n                                options={years}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='cvv-container'>\r\n                        <div className='cvv-title'>CVV</div>\r\n                        <Input placeholder='***' onChange={onChangeCVV} value={cardCVV}/>\r\n                    </div>\r\n                    <div className='btn-container'>\r\n                        <Button onClick={onClickConfirm}>Confirm</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default Payment;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Checkout\\index.js",["291","292","293"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Form, Input, message, Checkbox, Select } from 'antd';\r\nimport FFLDealer from \"../FFLDealer\";\r\nimport UserContext from \"../../utils/UserContext\";\r\nimport api from '../../api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst states = [\r\n    { key: 'Alabama', value: 'Alabama'},\r\n    { key: 'Alaska', value: 'Alaska'},\r\n    { key: 'Arizona', value: 'Arizona'},\r\n    { key: 'Arkansas', value: 'Arkansas'},\r\n    { key: 'California', value: 'California'},\r\n    { key: 'Colorado', value: 'Colorado'},\r\n    { key: 'Connecticut', value: 'Connecticut'},\r\n    { key: 'Delaware', value: 'Delaware'},\r\n    { key: 'Florida', value: 'Florida'},\r\n    { key: 'Georgia', value: 'Georgia'},\r\n    { key: 'Hawaii', value: 'Hawaii'},\r\n    { key: 'Idaho', value: 'Idaho'},\r\n    { key: 'Illinois', value: 'Illinois'},\r\n    { key: 'Indiana', value: 'Indiana'},\r\n    { key: 'Iowa', value: 'Iowa'},\r\n    { key: 'Kansas', value: 'Kansas'},\r\n    { key: 'Kentucky', value: 'Kentucky'},\r\n    { key: 'Louisiana', value: 'Louisiana'},\r\n    { key: 'Maine', value: 'Maine'},\r\n    { key: 'Maryland', value: 'Maryland'},\r\n    { key: 'Massachusetts', value: 'Massachusetts'},\r\n    { key: 'Michigan', value: 'Michigan'},\r\n    { key: 'Minnesota', value: 'Minnesota'},\r\n    { key: 'Mississippi', value: 'Mississippi'},\r\n    { key: 'Missouri', value: 'Missouri'},\r\n    { key: 'Montana', value: 'Montana'},\r\n    { key: 'Nebraska', value: 'Nebraska'},\r\n    { key: 'Nevada', value: 'Nevada'},\r\n    { key: 'New Hampshire', value: 'New Hampshire'},\r\n    { key: 'New Jersey', value: 'New Jersey'},\r\n    { key: 'New Mexico', value: 'New Mexico'},\r\n    { key: 'New York', value: 'New York'},\r\n    { key: 'North Carolina', value: 'North Carolina'},\r\n    { key: 'North Dakota', value: 'North Dakota'},\r\n    { key: 'Ohio', value: 'Ohio'},\r\n    { key: 'Oklahoma', value: 'Oklahoma'},\r\n    { key: 'Oregon', value: 'Oregon'},\r\n    { key: 'Pennsylvania', value: 'Pennsylvania'},\r\n    { key: 'Rhode Island', value: 'Rhode Island'},\r\n    { key: 'South Carolina', value: 'South Carolina'},\r\n    { key: 'South Dakota', value: 'South Dakota'},\r\n    { key: 'Tennessee', value: 'Tennessee'},\r\n    { key: 'Texas', value: 'Texas'},\r\n    { key: 'Utah', value: 'Utah'},\r\n    { key: 'Vermont', value: 'Vermont'},\r\n    { key: 'Virginia', value: 'Virginia'},\r\n    { key: 'Washington', value: 'Washington'},\r\n    { key: 'West Virginia', value: 'West Virginia'},\r\n    { key: 'Wisconsin', value: 'Wisconsin'},\r\n    { key: 'Wyoming', value: 'Wyoming'}\r\n];\r\n\r\nconst Checkout = () => {\r\n    const history = useHistory()\r\n    const { userData, setSpinning } = useContext(UserContext)\r\n    const [isForm, setIsForm] = useState(false)\r\n    const [form] = Form.useForm()\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [checked, setChecked] = useState(false)\r\n    const [isCompleteShippingAddress, setIsCompleteShippingAddress] = useState(false)\r\n    const [userAddress, setUserAddress] = useState(null)\r\n    const [fflDealer, setFflDealer] = useState(null)\r\n\r\n    const openFormForAddress = () => {\r\n        setIsForm(true)\r\n    }\r\n\r\n    const onFinish = (values) => { };\r\n\r\n    const onFirstNameChange = (ev) => {\r\n        form.setFieldsValue({\r\n            firstname: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onLastNameChange = (ev) => {\r\n        form.setFieldsValue({\r\n            lastname: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onAddress1Change = (ev) => {\r\n        form.setFieldsValue({\r\n            address1: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onAddress2Change = (ev) => {\r\n        form.setFieldsValue({\r\n            address2: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onZipCodeChange = (ev) => {\r\n        form.setFieldsValue({\r\n            zipCode: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onCityChange = (ev) => {\r\n        form.setFieldsValue({\r\n            city: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onCountryChange = (value) => {\r\n        form.setFieldsValue({\r\n            country: value,\r\n        });\r\n    };\r\n\r\n    const onStateChange = (value) => {\r\n        form.setFieldsValue({\r\n            state: value,\r\n        });\r\n    };\r\n\r\n    const onChecking = (ev) => {\r\n        setChecked(ev.target.checked)\r\n    }\r\n\r\n    const saveEdit = async (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.firstname || values.firstname === \"\") {\r\n            toast.warning(\"Please input First Name!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.lastname || values.lastname === \"\") {\r\n            toast.warning(\"Please input Last Name!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.address1 || values.address1 === \"\") {\r\n            toast.warning(\"Please input Address!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        const zipCodePattern = /^(?:\\d{5}|\\d{5}-\\d{4})$/;\r\n        if (!values.zipCode || values.zipCode === \"\") {\r\n            toast.warning(\"Please input Zip Code!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        } else if (!zipCodePattern.test(values.zipCode)) {\r\n            toast.warning(\"Invalid ZIP Code. Please input a valid format (12345 or 12345-6789).\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.city || values.city === \"\") {\r\n            toast.warning(\"Please input City!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        // if (!values.country || values.country === \"\") {\r\n        //     toast.warning(\"Please input Country!\", {\r\n        //         position: toast.POSITION.TOP_RIGHT\r\n        //     });\r\n        //     return;\r\n        // }\r\n        if (!values.state || values.state === \"\") {\r\n            toast.warning(\"Please input State!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let fullName = values.firstname + \" \" + values.lastname;\r\n        let address = values.address1;\r\n        let address2 = values.address2;\r\n        let zipCode = values.zipCode;\r\n        let city = values.city;\r\n        let country = 'United States';\r\n        let state = values.state;\r\n\r\n        setSpinning(true)\r\n        await api.updateAccountInfo({\r\n            fullName,\r\n            address,\r\n            address2,\r\n            zipCode,\r\n            city,\r\n            country,\r\n            state\r\n        })\r\n        await getUserInfo()\r\n        setSpinning(false)\r\n\r\n        setIsEdit(false)\r\n    };\r\n\r\n    const edit = () => {\r\n        setIsEdit(true)\r\n    }\r\n\r\n    const closeEdit = () => {\r\n        setIsEdit(false)\r\n        if(!userAddress) {\r\n            form.setFieldsValue({\r\n                firstname: null,\r\n                lastname: null,\r\n                address1: null,\r\n                address2: null,\r\n                zipCode: null,\r\n                city: null,\r\n                country: null,\r\n                state: null,\r\n            });\r\n        } else {\r\n            form.setFieldsValue(userAddress);\r\n        }\r\n    }\r\n\r\n    const getUserInfo = async () => {\r\n        let token = localStorage.getItem(\"aotacticalToken\");\r\n        setSpinning(true)\r\n        const res = await api.getUserInfo(token)\r\n        setSpinning(false)\r\n\r\n        if(res.data.address && res.data.zipCode && res.data.city && res.data.country && res.data.state) {\r\n            const address = {\r\n                firstname: res.data.fullName.split(\" \")[0],\r\n                lastname: res.data.fullName.split(\" \")[1],\r\n                address1: res.data.address,\r\n                address2: res.data.address2,\r\n                zipCode: res.data.zipCode,\r\n                city: res.data.city,\r\n                country: res.data.country,\r\n                state: res.data.state,\r\n            }\r\n            \r\n            form.setFieldsValue(address)\r\n            setUserAddress(address)\r\n            openFormForAddress()\r\n            setIsCompleteShippingAddress(true)\r\n        }else{\r\n            form.setFieldsValue({\r\n                country: 'United States'\r\n            })\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserInfo()\r\n    }, [])\r\n\r\n    const AddressForm = () => {\r\n        return <div className=\"address-form\">\r\n            <Form\r\n                form={form}\r\n                name=\"control-hooks\"\r\n                onFinish={onFinish}\r\n                style={{\r\n                    maxWidth: 600,\r\n                    marginTop: '2rem'\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                >\r\n                    <Input onChange={onFirstNameChange} disabled={!isEdit} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                >\r\n                    <Input onChange={onLastNameChange} disabled={!isEdit} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"address1\"\r\n                    label=\"Street Address\"\r\n                >\r\n                    <Input onChange={onAddress1Change} disabled={!isEdit} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"address2\"\r\n                    label=\"Street Address 2\"\r\n                >\r\n                    <Input onChange={onAddress2Change} disabled={!isEdit} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"zipCode\"\r\n                    label=\"Zip/Post Code\"\r\n                >\r\n                    <Input onChange={onZipCodeChange} disabled={!isEdit} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"city\"\r\n                    label=\"City\"\r\n                >\r\n                    <Input onChange={onCityChange} disabled={!isEdit} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"country\"\r\n                    label=\"Country\"\r\n                >\r\n                    <Select\r\n                        onChange={onCountryChange}\r\n                        allowClear\r\n                        showSearch\r\n                        optionFilterProp=\"children\"\r\n                        disabled={!isEdit}\r\n                        defaultValue={{\r\n                            value: 'United States'\r\n                        }}\r\n                    >\r\n                        {\r\n                            [\r\n                                {\r\n                                    key: 'United States',\r\n                                    value: 'United States'\r\n                                }\r\n                            ].map(item => {\r\n                                return <Option value={item.value} key={item.key}>{item.value}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"state\"\r\n                    label=\"State/Province\"\r\n                >\r\n                    <Select\r\n                        onChange={onStateChange}\r\n                        allowClear\r\n                        showSearch\r\n                        optionFilterProp=\"children\"\r\n                        disabled={!isEdit}\r\n                    >\r\n                        {\r\n                            states.map(item => {\r\n                                return <Option value={item.value} key={item.key}>{item.value}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n            {\r\n                isEdit ? <div>\r\n                    <Button onClick={saveEdit} style={{marginRight: '10px'}}>Save</Button>\r\n                    <Button danger onClick={closeEdit}>Cancel</Button>\r\n                </div> : <Button type=\"dashed\" onClick={edit}>Edit</Button>\r\n            }\r\n        </div>\r\n    }\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"aotacticalToken\");\r\n\r\n        const getUserInfo = async () => {\r\n            setSpinning(true)\r\n            const res = await api.getUserInfo(token)\r\n            setSpinning(false)\r\n\r\n            form.setFieldsValue({\r\n                firstname: res.data.fullName.split(\" \")[0],\r\n                lastname: res.data.fullName.split(\" \")[1],\r\n                address1: res.data.address,\r\n                address2: res.data.address2,\r\n                zipCode: res.data.zipCode,\r\n                city: res.data.city,\r\n                country: res.data.country,\r\n                state: res.data.state\r\n            });\r\n        }\r\n\r\n        getUserInfo()\r\n    }, [userData])\r\n\r\n    const pickFFL = (param) => {\r\n        setFflDealer(param)\r\n    }\r\n\r\n    const continuePayment = () => {\r\n        history.push(\"/payment\")\r\n    }\r\n\r\n    return <div className=\"my-checkout\">\r\n        <ToastContainer />\r\n        <div className=\"addresses\">\r\n            <div className=\"billing-address\">\r\n                <h3>Billing Address</h3>\r\n                <hr></hr>\r\n                {\r\n                    !isForm && <Button onClick={openFormForAddress}>Add Address</Button>\r\n                }\r\n                {\r\n                    isForm && <AddressForm></AddressForm>\r\n                }\r\n            </div>\r\n            {\r\n                isCompleteShippingAddress && <div className=\"shipping-address\">\r\n                    <div style={{paddingLeft: '20px', paddingRight: '20px'}}>\r\n                        <h3>Shipping Address</h3>\r\n                        <hr></hr>\r\n                    </div>\r\n                    \r\n                    <FFLDealer pickFflDealer={pickFFL} />\r\n                </div>\r\n            }\r\n        </div>\r\n        <div className=\"verify-age\">\r\n            <Checkbox onChange={onChecking}>By checking this box you are validating that you are of legal age to purchase firearms and ammunition and are in compliance with all rules and regulations of your jurisdiction</Checkbox>\r\n        </div>\r\n        {\r\n            !fflDealer && <div className=\"notification\">\r\n                Please select an FFL to Continue\r\n            </div>\r\n        }\r\n        <div className=\"continue-button\">\r\n            <Button type=\"primary\" disabled={!fflDealer || !checked} onClick={continuePayment}>Continue to Payment Method</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\AddCategoryToProduct\\index.js",["294"],"import React, { useEffect, useState } from 'react'\r\nimport apis from '../../api';\r\n\r\nconst AddCategoryToProduct = () => {\r\n    useEffect(() => {\r\n        const addCategoryToProduct = async () => {\r\n            await apis.addCategoryToProduct({});\r\n        }\r\n\r\n        addCategoryToProduct();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='product-detail'>\r\n            Add Category to Product\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCategoryToProduct;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Product\\index.js",["295","296","297"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport ImageMagnifier from '../../components/ui/ImageMagnifier';\r\nimport UserContext from '../../utils/UserContext';\r\nimport { Rate, message } from 'antd';\r\n\r\nconst ProductDetail = () => {\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState({});\r\n    const [cnt, setCnt] = useState(1);\r\n    const { cart, setCart, setSpinning, customerId } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        const getProdctById = async (id) => {\r\n            setSpinning(true)\r\n            const res = await apis.getProductById({ id: id });\r\n            setProduct(res.data.product)\r\n            setSpinning(false)\r\n        }\r\n\r\n        getProdctById(id);\r\n    }, []);\r\n\r\n    // page log\r\n    useEffect(() => {\r\n        const pageLog = async () => {\r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: '/product/' + id\r\n            })\r\n        }\r\n\r\n        pageLog()\r\n    }, [customerId])\r\n\r\n    const inputCartItem = (ev) => {\r\n        if(ev.target.value <= 0) {\r\n            message.info(\"You can input over 1 item.\")\r\n        }else{\r\n            setCnt(ev.target.value)\r\n        }\r\n    }\r\n\r\n    const increaseCartItem = (ev) => {\r\n        let tmp = cnt + 1\r\n        if(tmp <= Number(product.available)) {\r\n            setCnt(tmp)\r\n        } else {\r\n            message.info(\"No more stock.\")\r\n        }\r\n    }\r\n\r\n    const decreaseCartItem = (ev) => {\r\n        let tmp = cnt - 1\r\n        if(tmp <= 0) {\r\n            message.info(\"You can input over 1 item.\")\r\n        } else {\r\n            setCnt(tmp)\r\n        }\r\n    }\r\n\r\n    const addCart = () => {\r\n        if(cart.filter(ct => ct.itemnumber === product.itemnumber).length === 0) {\r\n            setCart([...cart, { ...product, cartCnt: cnt}])\r\n        }else{\r\n            cart.map(ct => {\r\n                if(ct.itemnumber === product.itemnumber) {\r\n                    ct['cartCnt'] += cnt\r\n                }\r\n            })\r\n            setCart([...cart])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='product-detail-panel'>\r\n            {\r\n                product.isZander && <div className='product-information'>\r\n                    <div className='product-title'>\r\n                        <h1>\r\n                            {\r\n                                product.desc1\r\n                            }\r\n                            ,\r\n                            <span style={{ marginLeft: '8px' }}>\r\n                                {\r\n                                    product.subcategory\r\n                                }\r\n                            </span>\r\n                        </h1>\r\n                    </div>\r\n                    <div className='product-review-tags'>\r\n                        <div>\r\n                            <Rate allowHalf defaultValue={2.5} />\r\n                            <span style={{ marginLeft: '5px' }}>512 Reviews</span>\r\n                        </div>\r\n                        <div style={{ marginLeft: '10px', marginRight: '10px', paddingTop: '5px' }}> | </div>\r\n                        <div style={{ paddingTop: '5px' }}>\r\n                            38 Questions & Answers\r\n                        </div>\r\n                    </div>\r\n                    <div className='product-sub-content'>\r\n                        {/* <div className='key-value'>\r\n                            <span className='label'>Model: </span>\r\n                            <span className='value'>3701</span>\r\n                        </div> */}\r\n                        <div className='key-value'>\r\n                            <span className='label'>Weight: </span>\r\n                            <span className='value'>{product.weight} kg</span>\r\n                        </div>\r\n                        <div className='key-value'>\r\n                            <span className='label'>Item Number: </span>\r\n                            <span className='value'>{product.itemnumber}</span>\r\n                        </div>\r\n                        <div className='key-value'>\r\n                            <span className='label'>UPC: </span>\r\n                            <span className='value'>{product.upc}</span>\r\n                        </div>\r\n                        <div className='key-value'>\r\n                            <span className='label'>MFG: </span>\r\n                            <span className='value'>{product.manufacturer}</span>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='product-content'>\r\n                        <div className='product-image'>\r\n                            <div>\r\n                                <div className='image-magnifier-container'>\r\n                                    <ImageMagnifier\r\n                                        width={\"100%\"}\r\n                                        src={product.imagelink}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='product-description'>\r\n                                <div>\r\n                                    {product.desc2}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='add-cart'>\r\n                            <div className='price-line' style={{ color: '#c7511f', fontSize: '18px', fontWeight: 'bold' }}>\r\n                                ${(Number(product.price1) * cnt).toFixed(2)}\r\n                            </div>\r\n                            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n                                    <div style={{\r\n                                        border: '1px solid #e9e9e9',\r\n                                        height: '42px',\r\n                                        width: '25px',\r\n                                        backgroundColor: '#f9f9f9',\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'center',\r\n                                        paddingTop: '6px',\r\n                                        fontSize: '18px',\r\n                                        borderRight: 'none'\r\n                                    }} onClick={decreaseCartItem}>-</div>\r\n                                    <div style={{ width: '40px', height: '38px' }}>\r\n                                        <input value={cnt} onChange={inputCartItem} style={{\r\n                                            maxWidth: '100%',\r\n                                            lineHeight: '38px',\r\n                                            textAlign: 'center',\r\n                                            border: '1px solid #e9e9e9'\r\n                                        }} />\r\n                                    </div>\r\n                                    <div style={{\r\n                                        border: '1px solid #e9e9e9',\r\n                                        height: '42px',\r\n                                        width: '25px',\r\n                                        backgroundColor: '#f9f9f9',\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'center',\r\n                                        paddingTop: '6px',\r\n                                        fontSize: '18px'\r\n                                    }} onClick={increaseCartItem}>+</div>\r\n                                </div>\r\n                                <div style={{\r\n                                    backgroundColor: '#ffd814',\r\n                                    borderRadius: '5px',\r\n                                    textAlign: 'center',\r\n                                    padding: '0 40px',\r\n                                    cursor: 'pointer',\r\n                                    lineHeight: '40px',\r\n                                    fontWeight: 'bold',\r\n                                    marginLeft: '10px'\r\n                                }} onClick={addCart}>\r\n                                    Add To Cart\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                product.isLipsey && <div className='product-information'>\r\n                    <div className='product-title'>\r\n                        <h1>\r\n                            {\r\n                                product.description1\r\n                            }\r\n                            ,\r\n                            <span style={{ marginLeft: '8px' }}>\r\n                                {\r\n                                    product.description2\r\n                                }\r\n                            </span>\r\n                        </h1>\r\n                    </div>\r\n                    <div className='product-review-tags'>\r\n                        <div>\r\n                            <Rate allowHalf defaultValue={2.5} />\r\n                            <span style={{ marginLeft: '5px' }}>512 Reviews</span>\r\n                        </div>\r\n                        <div style={{ marginLeft: '10px', marginRight: '10px', paddingTop: '5px' }}> | </div>\r\n                        <div style={{ paddingTop: '5px' }}>\r\n                            38 Questions & Answers\r\n                        </div>\r\n                    </div>\r\n                    <div className='product-sub-content'>\r\n                        <div className='key-value'>\r\n                            <span className='label'>Model: </span>\r\n                            <span className='value'>{product.manufacturerModelNo}</span>\r\n                        </div>\r\n                        {\r\n                            product.weight && <div className='key-value'>\r\n                                <span className='label'>Weight: </span>\r\n                                <span className='value'>{product.weight} kg</span>\r\n                            </div>\r\n                        }\r\n                        <div className='key-value'>\r\n                            <span className='label'>Item Number: </span>\r\n                            <span className='value'>{product.itemNo}</span>\r\n                        </div>\r\n                        <div className='key-value'>\r\n                            <span className='label'>UPC: </span>\r\n                            <span className='value'>{product.upc}</span>\r\n                        </div>\r\n                        <div className='key-value'>\r\n                            <span className='label'>MFG: </span>\r\n                            <span className='value'>{product.manufacturer}</span>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='product-content'>\r\n                        <div className='product-image'>\r\n                            <div>\r\n                                <div className='image-magnifier-container'>\r\n                                    <ImageMagnifier\r\n                                        width={\"100%\"}\r\n                                        src={\"https://www.lipseyscloud.com/images/\" + product.imageName}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='product-description'>\r\n                                <div>\r\n                                    {product.type}\r\n                                </div>\r\n                                <div>\r\n                                    {product.itemGroup}\r\n                                </div>\r\n                                <div>\r\n                                    {product.additionalFeature1}\r\n                                </div>\r\n                                <div>\r\n                                    {product.additionalFeature2}\r\n                                </div>\r\n                                <div>\r\n                                    {product.additionalFeature3}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='add-cart'>\r\n                            <div className='price-line' style={{ color: '#c7511f', fontSize: '18px', fontWeight: 'bold' }}>\r\n                                ${(Number(product.price) * cnt).toFixed(2)}\r\n                            </div>\r\n                            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-start', marginRight: '10px' }}>\r\n                                    <div style={{\r\n                                        border: '1px solid #e9e9e9',\r\n                                        height: '42px',\r\n                                        width: '25px',\r\n                                        backgroundColor: '#f9f9f9',\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'center',\r\n                                        paddingTop: '6px',\r\n                                        fontSize: '18px',\r\n                                        borderRight: 'none'\r\n                                    }} onClick={decreaseCartItem}>-</div>\r\n                                    <div style={{ width: '40px', height: '38px' }}>\r\n                                        <input value={cnt} onChange={inputCartItem} style={{\r\n                                            maxWidth: '100%',\r\n                                            lineHeight: '38px',\r\n                                            textAlign: 'center',\r\n                                            border: '1px solid #e9e9e9'\r\n                                        }} />\r\n                                    </div>\r\n                                    <div style={{\r\n                                        border: '1px solid #e9e9e9',\r\n                                        height: '42px',\r\n                                        width: '25px',\r\n                                        backgroundColor: '#f9f9f9',\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'center',\r\n                                        paddingTop: '6px',\r\n                                        fontSize: '18px'\r\n                                    }} onClick={increaseCartItem}>+</div>\r\n                                </div>\r\n                                <div style={{\r\n                                    backgroundColor: '#ffd814',\r\n                                    borderRadius: '5px',\r\n                                    textAlign: 'center',\r\n                                    padding: '0 40px',\r\n                                    cursor: 'pointer',\r\n                                    lineHeight: '40px',\r\n                                    fontWeight: 'bold',\r\n                                    marginLeft: '10px'\r\n                                }} onClick={addCart}>\r\n                                    Add To Cart\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetail;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\UploadProduct\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\CrudAccount\\index.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import { Button, Modal, Form, InputNumber, Input, Popconfirm, Table, Typography, Select, Checkbox, message } from 'antd';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport apis from '../../../api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport UserContext from '../../../utils/UserContext';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Accounts = () => {\r\n    const history = useHistory();\r\n    const { setSpinning } = useContext(UserContext);\r\n\r\n    const EditableCell = ({\r\n        editing,\r\n        dataIndex,\r\n        title,\r\n        inputType,\r\n        record,\r\n        index,\r\n        children,\r\n        ...restProps\r\n    }) => {\r\n        let inputNode = <Input />\r\n        if (inputType === 'number')\r\n            inputNode = <InputNumber />\r\n        if (inputType === 'checkbox')\r\n            inputNode = <Checkbox />\r\n        if (inputType === 'select')\r\n            inputNode = <Select />\r\n\r\n        return (\r\n            <td {...restProps}>\r\n                {editing ? (\r\n                    <Form.Item\r\n                        name={dataIndex}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: `Please Input ${title}!`,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        {inputNode}\r\n                    </Form.Item>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    };\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [accountsTmp, setAccountsTmp] = useState([]);\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const [accountId, setAccountId] = useState('');\r\n    const [mode, setMode] = useState('create');\r\n    const [filterAccount, setFilterAccount] = useState(true);\r\n    const [filterContractor, setFilterContractor] = useState(true);\r\n    const [filterFullName, setFilterFullName] = useState(null);\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        setAccountId(record._id)\r\n        setMode(\"update\")\r\n        form.setFieldsValue({\r\n            fullName: record.fullName,\r\n            email: record.email,\r\n            phone: record.phone,\r\n            address: record.address,\r\n            fflNumber: record.fflNumber,\r\n            role: record.role\r\n        });\r\n        showModal();\r\n    };\r\n\r\n    const remove = async (record) => {\r\n        setSpinning(true)\r\n        await apis.removeAccount(record.key)\r\n        getAccounts();\r\n        setSpinning(false)\r\n        message.success('Successfully Saved!');\r\n    }\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            render: (text, record, index) => index + 1,\r\n            width: '5%',\r\n            editable: false,\r\n        },\r\n        {\r\n            title: 'Full Name',\r\n            dataIndex: 'fullName',\r\n            width: '15%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: '15%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Role',\r\n            dataIndex: 'role',\r\n            width: '15%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Phone Number',\r\n            dataIndex: 'phone',\r\n            width: '15%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            width: '15%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'FFL Number',\r\n            dataIndex: 'fflNumber',\r\n            width: '15%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                return <>\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Edit\r\n                    </Typography.Link>\r\n                    <span style={{ marginLeft: '5px', marginRight: '5px' }}>|</span>\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => remove(record)}>\r\n                        <a>Delete</a>\r\n                    </Popconfirm>\r\n                </>\r\n            },\r\n        },\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    useEffect(async () => {\r\n        setSpinning(true)\r\n        await getAccounts();\r\n        setSpinning(false)\r\n    }, []);\r\n\r\n    const getAccounts = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getAccounts();\r\n        setSpinning(false)\r\n        const tmp = [];\r\n        if (res.data.accounts?.length > 0) {\r\n            res.data.accounts.map(account => {\r\n                tmp.push({ ...account, key: account._id })\r\n            })\r\n            setAccounts(tmp);\r\n            setAccountsTmp(tmp);\r\n        }\r\n    }\r\n\r\n    const saveAccount = async (param) => {\r\n        setSpinning(true)\r\n        const data = await apis.newAccount(param)\r\n        setSpinning(false)\r\n        if (data.status === 200) {\r\n            emptyForm();\r\n            getAccounts();\r\n            message.success('Successfully Saved!');\r\n        }else{\r\n            message.error('Something went wrong!');\r\n        }\r\n    }\r\n\r\n    const emptyForm = () => {\r\n        form.setFieldsValue({\r\n            fullName: \"\",\r\n            email: \"\",\r\n            role: \"\",\r\n            phone: \"\",\r\n            address: \"\",\r\n            fflNumber: \"\",\r\n            password: \"\",\r\n            passwordCheck: \"\"\r\n        });\r\n    }\r\n\r\n    const reSaveAccount = async (param) => {\r\n        const data = {\r\n            key: accountId,\r\n            param: param\r\n        }\r\n        setSpinning(true)\r\n        const res = await apis.editAccount(data);\r\n        setSpinning(false)\r\n        if (res.status === 200) {\r\n            emptyForm();\r\n            getAccounts();\r\n            message.success('Successfully Updated!');\r\n        }\r\n    }\r\n\r\n    const showModal = (param) => {\r\n        if(param === 'create'){\r\n            setMode(\"create\")\r\n        }else{\r\n            setMode(\"edit\")\r\n        }\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalOpen(false);\r\n        onReset();\r\n    };\r\n\r\n    const onFullNameChange = (ev) => {\r\n        form.setFieldsValue({\r\n            fullName: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onEmailChange = (ev) => {\r\n        form.setFieldsValue({\r\n            email: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPasswordChange = (ev) => {\r\n        form.setFieldsValue({\r\n            password: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onPasswordCheckChange = (ev) => {\r\n        form.setFieldsValue({\r\n            passwordCheck: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onRoleChange = (value) => {\r\n        form.setFieldsValue({\r\n            role: value,\r\n        });\r\n    };\r\n\r\n    const onPhoneChange = (ev) => {\r\n        form.setFieldsValue({\r\n            phone: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onAddressChange = (ev) => {\r\n        form.setFieldsValue({\r\n            address: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onFflNumberChange = (ev) => {\r\n        form.setFieldsValue({\r\n            fflNumber: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const createAccount = (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.fullName || values.fullName === \"\") {\r\n            toast.warning(\"Please input full name!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.email || values.email === \"\") {\r\n            toast.warning(\"Please input email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.password || values.password === \"\") {\r\n            toast.warning(\"Please input password!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.passwordCheck || values.passwordCheck === \"\") {\r\n            if (values.password !==  values.passwordCheck) {\r\n                toast.warning(\"Please input correct password and match!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n                return;\r\n            }\r\n\r\n            toast.warning(\"Please input password check!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.role || values.role === \"\") {\r\n            toast.warning(\"Please select role!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.phone || values.phone === \"\") {\r\n            toast.warning(\"Please input phone number!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.address || values.address === \"\") {\r\n            toast.warning(\"Please input address!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let fullName = values.fullName;\r\n        let email = values.email;\r\n        let password = values.password;\r\n        let passwordCheck = values.passwordCheck;\r\n        let role = values.role;\r\n        let phone = values.phone;\r\n        let address = values.address;\r\n        let fflNumber = values.fflNumber;\r\n        \r\n        saveAccount({\r\n            fullName: fullName,\r\n            email: email,\r\n            password: password,\r\n            passwordCheck: passwordCheck,\r\n            role: role,\r\n            phone: phone,\r\n            address: address,\r\n            fflNumber: fflNumber\r\n        });\r\n\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const updateAccount = (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.fullName || values.fullName === \"\") {\r\n            toast.warning(\"Please input account full name!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.email || values.email === \"\") {\r\n            toast.warning(\"Please input account email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (values.password !== values.passwordCheck) {\r\n            toast.warning(\"Please input correct password and match!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.role || values.role === \"\") {\r\n            toast.warning(\"Please select role!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.phone || values.phone === \"\") {\r\n            toast.warning(\"Please input account phone number!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.address || values.address === \"\") {\r\n            toast.warning(\"Please input account address!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let fullName = values.fullName;\r\n        let email = values.email;\r\n        let role = values.role;\r\n        let phone = values.phone;\r\n        let address = values.address;\r\n        let fflNumber = values.fflNumber;\r\n        let password = values.password;\r\n        let passwordCheck = values.passwordCheck;\r\n\r\n        reSaveAccount({\r\n            fullName: fullName,\r\n            email: email,\r\n            password: password,\r\n            passwordCheck: passwordCheck,\r\n            role: role,\r\n            phone: phone,\r\n            address: address,\r\n            fflNumber: fflNumber\r\n        });\r\n\r\n        emptyForm()\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const onFinish = (values) => {};\r\n\r\n    const onReset = () => {\r\n        emptyForm();\r\n    };\r\n\r\n    useEffect(() => {\r\n        emptyForm();\r\n    }, []);\r\n\r\n    const filterAccountChange = (e) => {\r\n        setFilterAccount(e.target.checked);\r\n    }\r\n\r\n    const filterContractorChange = (e) => {\r\n        setFilterContractor(e.target.checked);\r\n    }\r\n\r\n    const filterAccounts = () => {\r\n        let tmp = accountsTmp, tmp1 = [], tmp2 = [];\r\n\r\n        tmp.map(t => {\r\n            if(filterAccount && filterContractor) {\r\n                if(t.role === 'employee' || t.role === 'contractor') {\r\n                    tmp1.push(t)\r\n                }\r\n            }else if(filterAccount && !filterContractor) {\r\n                if(t.role === 'employee') {\r\n                    tmp1.push(t)\r\n                }\r\n            }else if(!filterAccount && filterContractor) {\r\n                if(t.role === 'contractor') {\r\n                    tmp1.push(t)\r\n                }\r\n            }else{\r\n                return;\r\n            }\r\n        })\r\n\r\n        if(filterFullName && filterFullName !== \"\") {\r\n            tmp1.map(t => {\r\n                if(t.fullName.toLowerCase().includes(filterFullName.toLowerCase())) {\r\n                    tmp2.push(t)\r\n                }\r\n            })\r\n        }else{\r\n            tmp2 = [...tmp1]\r\n        }\r\n\r\n        setAccounts(tmp2);\r\n    }\r\n\r\n    const filterClear = () => {\r\n        setAccounts(accountsTmp)\r\n        setFilterContractor(true)\r\n        setFilterAccount(true)\r\n        setFilterFullName(null)\r\n    }\r\n\r\n    const accountFullNameSearch = (ev) => {\r\n        setFilterFullName(ev.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='page-container'>\r\n            <div className='w-100 m-auto' style={{padding: '0 10px'}}>\r\n                <div style={{marginBottom: '1rem', marginTop: '1rem'}}>\r\n                    <Button className='new-account' onClick={() => showModal('create')}>\r\n                        New Account\r\n                    </Button>\r\n                </div>\r\n                {/* <div className='filter-options desktop-filter'>\r\n                    <div>\r\n                        <Input placeholder='Search a full name' value={filterFullName} onChange={accountFullNameSearch} />\r\n                    </div>\r\n                    <Button onClick={filterAccounts}>\r\n                        Filter\r\n                    </Button>\r\n                    <Button onClick={filterClear} danger>\r\n                        Clear\r\n                    </Button>\r\n                </div> */}\r\n                <div className='page-content'>\r\n                    <ToastContainer />\r\n                    <div className=''>\r\n                        <Modal\r\n                            title={mode === 'create' ? \"Create New Account\" : \"Update Account\"}\r\n                            visible={isModalOpen}\r\n                            onCancel={handleCancel}\r\n                            footer={mode === 'create' ? [\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={createAccount}>\r\n                                    Create\r\n                                </Button>,\r\n                                <Button htmlType=\"button\" onClick={onReset}>\r\n                                    Reset\r\n                                </Button>,\r\n                                <Button type=\"link\" htmlType=\"button\" onClick={handleCancel}>\r\n                                    Cancel\r\n                                </Button>\r\n                            ] : [\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={updateAccount}>\r\n                                    Save\r\n                                </Button>,\r\n                                <Button type=\"link\" htmlType=\"button\" onClick={handleCancel}>\r\n                                    Cancel\r\n                                </Button>\r\n                            ]}\r\n                        >\r\n                            <Form\r\n                                form={form}\r\n                                name=\"control-hooks\"\r\n                                onFinish={onFinish}\r\n                                style={{\r\n                                    maxWidth: 600,\r\n                                }}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"fullName\"\r\n                                    label=\"Full Name\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onFullNameChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onEmailChange} />\r\n                                </Form.Item>\r\n                                {\r\n                                    mode === 'create' ? <>\r\n                                        <Form.Item\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password\r\n                                                onChange={onPasswordChange}\r\n                                                iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                                            />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"passwordCheck\"\r\n                                            label=\"Password Check\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password\r\n                                                onChange={onPasswordCheckChange}\r\n                                                iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </> : <>\r\n                                        <Form.Item\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                        >\r\n                                            <Input.Password\r\n                                                onChange={onPasswordChange}\r\n                                                iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                                            />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"passwordCheck\"\r\n                                            label=\"Password Check\"\r\n                                        >\r\n                                            <Input.Password\r\n                                                onChange={onPasswordCheckChange}\r\n                                                iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </>\r\n                                }\r\n                                <Form.Item\r\n                                    name=\"role\"\r\n                                    label=\"Role\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"Select A Role\"\r\n                                        onChange={onRoleChange}\r\n                                        allowClear\r\n                                        showSearch\r\n                                        optionFilterProp=\"children\"\r\n                                    >\r\n                                        {\r\n                                            ['admin', 'vendor', 'customer'].map(role => {\r\n                                                return <Option value={role} key={role}>{role}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"phone\"\r\n                                    label=\"Phone Number\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onPhoneChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"address\"\r\n                                    label=\"Address\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onAddressChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"fflNumber\"\r\n                                    label=\"FFL Number\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: false,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onFflNumberChange} />\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                    <Form form={form} component={false}>\r\n                        <Table\r\n                            components={{\r\n                                body: {\r\n                                    cell: EditableCell,\r\n                                },\r\n                            }}\r\n                            scroll={{ x: 1000 }}\r\n                            bordered\r\n                            dataSource={accounts}\r\n                            columns={mergedColumns}\r\n                            rowClassName=\"editable-row\"\r\n                            pagination={{\r\n                                onChange: cancel,\r\n                                position: ['bottomLeft'],\r\n                                showSizeChanger: true,\r\n                                pageSizeOptions: ['10', '20', '30', '50', '100', '1000', '10000']\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accounts;\r\n","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\HomeSetting\\index.js",["312","313","314","315","316","317","318","319"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport apis from \"../../../api\";\r\nimport { Select, Button, message, Popconfirm } from 'antd';\r\nimport UserContext from \"../../../utils/UserContext\";\r\n\r\nconst Setting = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedSlide, setSelectedSlide] = useState(null);\r\n    const [selectedTop, setSelectedTop] = useState(null);\r\n    const [slideProducts, setSlideProducts] = useState([]);\r\n    const [topProducts, setTopProducts] = useState([]);\r\n    const { setSpinning } = useContext(UserContext);\r\n\r\n    useEffect(async () => {\r\n        setSpinning(true)\r\n        await getAllProducts();\r\n        await getSlideProducts();\r\n        await getTopProducts();\r\n        setSpinning(false)\r\n    }, []);\r\n\r\n    const getAllProducts = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getAllProducts();\r\n        setSpinning(false)\r\n        const tmp = [];\r\n        if (res.data.products?.length > 0) {\r\n            res.data.products.map(product => {\r\n                tmp.push({ ...product, key: product._id })\r\n            })\r\n            setProducts(tmp);\r\n        }\r\n    }\r\n\r\n    const getSlideProducts = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getSlideProducts();\r\n        setSpinning(false)\r\n        const tmp = [];\r\n        if (res.data.products?.length > 0) {\r\n            res.data.products.map(product => {\r\n                tmp.push({ ...product, key: product._id })\r\n            })\r\n            setSlideProducts(tmp);\r\n        }\r\n    }\r\n\r\n    const getTopProducts = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getTopProducts();\r\n        setSpinning(false)\r\n        const tmp = [];\r\n        if (res.data.products?.length > 0) {\r\n            res.data.products.map(product => {\r\n                tmp.push({ ...product, key: product._id })\r\n            })\r\n            setTopProducts(tmp);\r\n        }\r\n    }\r\n\r\n    const onSlideChange = (value) => {\r\n        setSelectedSlide(value)\r\n    };\r\n\r\n    const onTopChange = (value) => {\r\n        setSelectedTop(value)\r\n    };\r\n\r\n    const filterOption = (input, option) =>\r\n        (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\r\n\r\n    const addSlide = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.addSlide({ id: selectedSlide });\r\n        if (res.data.success) {\r\n            await getSlideProducts();\r\n        }\r\n        setSpinning(false)\r\n    }\r\n\r\n    const addTop = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.addTop({ id: selectedTop });\r\n        if (res.data.success) {\r\n            await getTopProducts();\r\n        }\r\n        setSpinning(false)\r\n    }\r\n\r\n    const confirmSlideDelete = async (e, id) => {\r\n        setSpinning(true)\r\n        const res = await apis.removeSlide({ id: id });\r\n        if (res.data.success) {\r\n            await getSlideProducts();\r\n        }\r\n        setSpinning(false)\r\n    };\r\n\r\n    const confirmTopDelete = async (e, id) => {\r\n        setSpinning(true)\r\n        const res = await apis.removeTop({ id: id });\r\n        if (res.data.success) {\r\n            await getTopProducts();\r\n        }\r\n        setSpinning(false)\r\n    };\r\n\r\n    const cancel = (e) => {\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"home-setting\">\r\n            <div className=\"slide-setting\">\r\n                <h2>Home Page Slide</h2>\r\n                <div>\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a product\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onSlideChange}\r\n                        filterOption={filterOption}\r\n                        options={products}\r\n                        style={{\r\n                            width: '280px'\r\n                        }}\r\n                    />\r\n                    <Button style={{ marginLeft: '10px' }} onClick={addSlide}>Add</Button>\r\n                </div>\r\n                {\r\n                    slideProducts.length === 0 && <div style={{ marginTop: '20px', paddingLeft: '10px' }}>\r\n                        <h4>No Slide Products</h4>\r\n                    </div>\r\n                }\r\n                {\r\n                    slideProducts.length !== 0 && <div style={{ marginTop: '20px', paddingLeft: '10px', display: 'flex', flexFlow: 'row wrap' }}>\r\n                        {\r\n                            slideProducts.map(sp => {\r\n                                return <div style={{ flex: '1 0 25%', maxWidth: '400px', minWidth: '270px', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <div style={{ width: '50%', height: '300px', overflow: 'hidden', maxWidth: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <img style={{ maxWidth: '100%', maxHeight: '100%' }} src={sp.imagelink ? sp.imagelink : \"https://www.lipseyscloud.com/images/\" + sp.imageName} />\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                                        <div>{sp.desc1 ? sp.desc1 : sp.description1}</div>\r\n                                        <div>{sp.desc2 ? sp.desc2 : sp.description2}</div>\r\n                                        <div>{sp.price1 ? sp.price1 : sp.price}</div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: '20px' }}>\r\n                                        <Popconfirm\r\n                                            title=\"Delete the product\"\r\n                                            description=\"Are you sure to delete this product?\"\r\n                                            onConfirm={(ev) => confirmSlideDelete(ev, sp._id)}\r\n                                            onCancel={cancel}\r\n                                            okText=\"Yes\"\r\n                                            cancelText=\"No\"\r\n                                        >\r\n                                            <Button danger>Delete</Button>\r\n                                        </Popconfirm>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"top-seller-setting\" style={{ marginTop: '4rem' }}>\r\n                <h2>Top Seller Product</h2>\r\n                <div>\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a product\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onTopChange}\r\n                        filterOption={filterOption}\r\n                        options={products}\r\n                        style={{\r\n                            width: '350px'\r\n                        }}\r\n                    />\r\n                    <Button style={{ marginLeft: '10px' }} onClick={addTop}>Add</Button>\r\n                </div>\r\n                <div style={{ marginTop: '20px', paddingLeft: '10px' }}>\r\n                {\r\n                    topProducts.length === 0 && <div style={{ marginTop: '20px', paddingLeft: '10px' }}>\r\n                        <h4>No Top Seller Products</h4>\r\n                    </div>\r\n                }\r\n                {\r\n                    topProducts.length !== 0 && <div style={{ marginTop: '20px', paddingLeft: '10px', display: 'flex', flexFlow: 'row wrap' }}>\r\n                        {\r\n                            topProducts.map(tp => {\r\n                                return <div style={{ flex: '1 0 25%', maxWidth: '400px', minWidth: '270px', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <div style={{ width: '50%', height: '300px', overflow: 'hidden', maxWidth: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <img style={{ maxWidth: '100%', maxHeight: '100%' }} src={tp.imagelink ? tp.imagelink : \"https://www.lipseyscloud.com/images/\" + tp.imageName} />\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                                        <div>{tp.desc1 ? tp.desc1 : tp.description1}</div>\r\n                                        <div>{tp.desc2 ? tp.desc2 : tp.description2}</div>\r\n                                        <div>{tp.price1 ? tp.price1 : tp.price}</div>\r\n                                    </div>\r\n                                    <div style={{ marginTop: '20px' }}>\r\n                                        <Popconfirm\r\n                                            title=\"Delete the product\"\r\n                                            description=\"Are you sure to delete this product?\"\r\n                                            onConfirm={(ev) => confirmTopDelete(ev, tp._id)}\r\n                                            onCancel={cancel}\r\n                                            okText=\"Yes\"\r\n                                            cancelText=\"No\"\r\n                                        >\r\n                                            <Button danger>Delete</Button>\r\n                                        </Popconfirm>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setting;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Admin\\CrudProduct\\index.js",["320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335"],"import { Button, Modal, Form, InputNumber, Input, Popconfirm, Table, Typography, Select, Checkbox, message } from 'antd';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport apis from '../../../api';\r\nimport category from '../../../utils/category';\r\nimport UserContext from '../../../utils/UserContext';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Products = () => {\r\n    const history = useHistory();\r\n    const { setSpinning } = useContext(UserContext);\r\n\r\n    const EditableCell = ({\r\n        editing,\r\n        dataIndex,\r\n        title,\r\n        inputType,\r\n        record,\r\n        index,\r\n        children,\r\n        ...restProps\r\n    }) => {\r\n        let inputNode = <Input />\r\n        if (inputType === 'number')\r\n            inputNode = <InputNumber />\r\n        if (inputType === 'checkbox')\r\n            inputNode = <Checkbox />\r\n        if (inputType === 'select')\r\n            inputNode = <Select />\r\n\r\n        return (\r\n            <td {...restProps}>\r\n                {editing ? (\r\n                    <Form.Item\r\n                        name={dataIndex}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: `Please Input ${title}!`,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        {inputNode}\r\n                    </Form.Item>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    };\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const [products, setProducts] = useState([]);\r\n    const [productsTmp, setProductsTmp] = useState([]);\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const [productId, setProductId] = useState('');\r\n    const [mode, setMode] = useState('create');\r\n    const [filterEmployee, setFilterEmployee] = useState(true);\r\n    const [filterContractor, setFilterContractor] = useState(true);\r\n    const [filterFullName, setFilterFullName] = useState(null);\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        setProductId(record._id)\r\n        setMode(\"update\")\r\n        form.setFieldsValue({\r\n            available: record.available,\r\n            category: record.category,\r\n            subcategory: record.subcategory,\r\n            desc1: record.desc1,\r\n            desc2: record.desc2,\r\n            itemnumber: record.itemnumber,\r\n            manufacturer: record.manufacturer,\r\n            mfgpnumber: record.mfgpnumber,\r\n            msrp: record.msrp,\r\n            price1: record.price1,\r\n            price2: record.price2,\r\n            price3: record.price3,\r\n            qty1: record.qty1,\r\n            qty2: record.qty2,\r\n            qty3: record.qty3,\r\n            upc: record.upc,\r\n            weight: record.weight,\r\n            serialized: record.serialized,\r\n            mapprice: record.mapprice,\r\n            allowdirectship: record.allowdirectship,\r\n            maineachprice: record.maineachprice,\r\n            imagelink: record.imagelink,\r\n        });\r\n        showModal();\r\n    };\r\n\r\n    const remove = async (record) => {\r\n        setSpinning(true)\r\n        await apis.removeProduct(record.key)\r\n        getProducts();\r\n        setSpinning(false)\r\n        message.success('Successfully Saved!');\r\n    }\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            render: (text, record, index) => index + 1,\r\n            width: '5%',\r\n            editable: false,\r\n        },\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imagelink',\r\n            width: '15%',\r\n            editable: true,\r\n            render: (text, record) => {\r\n                return <div style={{\r\n                    maxWidth: '200px',\r\n                    maxHeight: '200px'\r\n                }}>\r\n                    <img src={text} alt='Image Not Found' style={{maxWidth: '100%', maxHeight: '100%'}} />\r\n                </div>\r\n            }\r\n        },\r\n        {\r\n            title: 'Available',\r\n            dataIndex: 'available',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Sub Category',\r\n            dataIndex: 'subcategory',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Description1',\r\n            dataIndex: 'desc1',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Description2',\r\n            dataIndex: 'desc2',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Item Number',\r\n            dataIndex: 'itemnumber',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Manufacturer',\r\n            dataIndex: 'manufacturer',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'MFGP Number',\r\n            dataIndex: 'mfgpnumber',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'MSRP',\r\n            dataIndex: 'msrp',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Price 1',\r\n            dataIndex: 'price1',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Price 2',\r\n            dataIndex: 'price2',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Price 3',\r\n            dataIndex: 'price3',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'QTY 1',\r\n            dataIndex: 'qty1',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'QTY 2',\r\n            dataIndex: 'qty2',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'QTY 3',\r\n            dataIndex: 'qty3',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'UPC',\r\n            dataIndex: 'upc',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Weight',\r\n            dataIndex: 'weight',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Serialized',\r\n            dataIndex: 'serialized',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Map Price',\r\n            dataIndex: 'mapprice',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Allow Direct Ship',\r\n            dataIndex: 'allowdirectship',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'Main Each Price',\r\n            dataIndex: 'maineachprice',\r\n            width: '3.33%',\r\n            editable: true\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            width: '10%',\r\n            render: (_, record) => {\r\n                return <>\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Edit\r\n                    </Typography.Link>\r\n                    <span style={{ marginLeft: '5px', marginRight: '5px' }}>|</span>\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => remove(record)}>\r\n                        <a>Delete</a>\r\n                    </Popconfirm>\r\n                </>\r\n            },\r\n        },\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    useEffect(async () => {\r\n        setSpinning(true)\r\n        await getProducts();\r\n        setSpinning(false)\r\n    }, []);\r\n\r\n    const getProducts = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getProducts();\r\n        setSpinning(false)\r\n        const tmp = [];\r\n        if (res.data.products?.length > 0) {\r\n            res.data.products.map(product => {\r\n                tmp.push({ ...product, key: product._id })\r\n            })\r\n            setProducts(tmp);\r\n            setProductsTmp(tmp);\r\n        }\r\n    }\r\n\r\n    const saveProduct = async (param) => {\r\n        setSpinning(true)\r\n        const data = await apis.newProduct(param);\r\n        setSpinning(false)\r\n        if (data.status === 200) {\r\n            emptyForm();\r\n            getProducts();\r\n            message.success('Successfully Saved!');\r\n        }else{\r\n            message.error('Something went wrong!');\r\n        }\r\n    }\r\n\r\n    const emptyForm = () => {\r\n        form.setFieldsValue({\r\n            available: \"\",\r\n            category: \"\",\r\n            subcategory: \"\",\r\n            desc1: \"\",\r\n            desc2: \"\",\r\n            itemnumber: \"\",\r\n            manufacturer: \"\",\r\n            mfgpnumber: \"\",\r\n            msrp: \"\",\r\n            price1: \"\",\r\n            price2: \"\",\r\n            price3: \"\",\r\n            qty1: \"\",\r\n            qty2: \"\",\r\n            qty3: \"\",\r\n            upc: \"\",\r\n            weight: \"\",\r\n            serialized: \"\",\r\n            mapprice: \"\",\r\n            allowdirectship: \"\",\r\n            maineachprice: \"\",\r\n            imagelink: \"\"\r\n        });\r\n    }\r\n\r\n    const reSaveProduct = async (param) => {\r\n        const data = {\r\n            key: productId,\r\n            param: param\r\n        }\r\n        const res = await apis.editProduct(data);\r\n        if (res.status === 200) {\r\n            emptyForm();\r\n            getProducts();\r\n            message.success('Successfully Updated!');\r\n        }\r\n    }\r\n\r\n    const showModal = (param) => {\r\n        if(param === 'create'){\r\n            setMode(\"create\")\r\n        }else{\r\n            setMode(\"edit\")\r\n        }\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalOpen(false);\r\n        onReset();\r\n    };\r\n\r\n    const onAvailableChange = (ev) => {\r\n        form.setFieldsValue({\r\n            available: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const onCategoryChange = (value) => {\r\n        form.setFieldsValue({\r\n            category: value,\r\n        });\r\n    };\r\n\r\n    const onSubCategoryChange = (ev) => {\r\n        form.setFieldsValue({\r\n            subcategory: ev.target.value,\r\n        });\r\n    };\r\n    const onDesc1Change = (ev) => {\r\n        form.setFieldsValue({\r\n            desc1: ev.target.value,\r\n        });\r\n    };\r\n    const onDesc2Change = (ev) => {\r\n        form.setFieldsValue({\r\n            desc2: ev.target.value,\r\n        });\r\n    };\r\n    const onItemNumberChange = (ev) => {\r\n        form.setFieldsValue({\r\n            itemnumber: ev.target.value,\r\n        });\r\n    };\r\n    const onManufacturerChange = (ev) => {\r\n        form.setFieldsValue({\r\n            manufacturer: ev.target.value,\r\n        });\r\n    };\r\n    const onMfgpNumberChange = (ev) => {\r\n        form.setFieldsValue({\r\n            mfgpnumber: ev.target.value,\r\n        });\r\n    };\r\n    const onMsrpChange = (ev) => {\r\n        form.setFieldsValue({\r\n            msrp: ev.target.value,\r\n        });\r\n    };\r\n    const onPrice1Change = (ev) => {\r\n        form.setFieldsValue({\r\n            price1: ev.target.value,\r\n        });\r\n    };\r\n    const onPrice2Change = (ev) => {\r\n        form.setFieldsValue({\r\n            price2: ev.target.value,\r\n        });\r\n    };\r\n    const onPrice3Change = (ev) => {\r\n        form.setFieldsValue({\r\n            price3: ev.target.value,\r\n        });\r\n    };\r\n    const onQty1Change = (ev) => {\r\n        form.setFieldsValue({\r\n            qty1: ev.target.value,\r\n        });\r\n    };\r\n    const onQty2Change = (ev) => {\r\n        form.setFieldsValue({\r\n            qty2: ev.target.value,\r\n        });\r\n    };\r\n    const onQty3Change = (ev) => {\r\n        form.setFieldsValue({\r\n            qty3: ev.target.value,\r\n        });\r\n    };\r\n    const onUpcChange = (ev) => {\r\n        form.setFieldsValue({\r\n            upc: ev.target.value,\r\n        });\r\n    };\r\n    const onWeightChange = (ev) => {\r\n        form.setFieldsValue({\r\n            weight: ev.target.value,\r\n        });\r\n    };\r\n    const onSerializedChange = (value) => {\r\n        form.setFieldsValue({\r\n            serialized: value,\r\n        });\r\n    };\r\n    const onMapPriceChange = (ev) => {\r\n        form.setFieldsValue({\r\n            mapprice: ev.target.value,\r\n        });\r\n    };\r\n    const onAllowdirectshipChange = (value) => {\r\n        form.setFieldsValue({\r\n            allowdirectship: value,\r\n        });\r\n    };\r\n    const onMainEachPriceChange = (ev) => {\r\n        form.setFieldsValue({\r\n            maineachpric: ev.target.value,\r\n        });\r\n    };\r\n    const onImageLinkChange = (ev) => {\r\n        form.setFieldsValue({\r\n            imagelink: ev.target.value,\r\n        });\r\n    };\r\n\r\n    const createProduct = (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.available || values.available === \"\") {\r\n            toast.warning(\"Please input available!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.category || values.category === \"\") {\r\n            toast.warning(\"Please select category!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.subcategory || values.subcategory === \"\") {\r\n            toast.warning(\"Please input sub category!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.desc1 || values.desc1 === \"\") {\r\n            toast.warning(\"Please input description1!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.desc2 || values.desc2 === \"\") {\r\n            toast.warning(\"Please input description2!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.manufacturer || values.manufacturer === \"\") {\r\n            toast.warning(\"Please input manufacuturer!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.mfgpnumber || values.mfgpnumber === \"\") {\r\n            toast.warning(\"Please input mfgp number!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.msrp || values.msrp === \"\") {\r\n            toast.warning(\"Please input msrp!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.price1 || values.price1 === \"\") {\r\n            toast.warning(\"Please input price1!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.qty1 || values.qty1 === \"\") {\r\n            toast.warning(\"Please input qty1!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.upc || values.upc === \"\") {\r\n            toast.warning(\"Please input upc!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.weight || values.weight === \"\") {\r\n            toast.warning(\"Please input weight!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.serialized || values.serialized === \"\") {\r\n            toast.warning(\"Please select serialized!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.mapprice || values.mapprice === \"\") {\r\n            toast.warning(\"Please input map price!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.allowdirectship || values.allowdirectship === \"\") {\r\n            toast.warning(\"Please select allow direct ship!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.maineachprice || values.maineachprice === \"\") {\r\n            toast.warning(\"Please input main each price!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        \r\n\r\n        let available = values.available;\r\n        let category = values.category;\r\n        let subcategory = values.subcategory;\r\n        let desc1 = values.desc1;\r\n        let desc2 = values.desc2;\r\n        let itemnumber = values.itemnumber;\r\n        let manufacturer = values.manufacturer;\r\n        let mfgpnumber = values.mfgpnumber;\r\n        let msrp = values.msrp;\r\n        let price1 = values.price1;\r\n        let price2 = values.price2;\r\n        let price3 = values.price3;\r\n        let qty1 = values.qty1;\r\n        let qty2 = values.qty2;\r\n        let qty3 = values.qty3;\r\n        let upc = values.upc;\r\n        let weight = values.weight;\r\n        let serialized = values.serialized;\r\n        let mapprice = values.mapprice;\r\n        let allowdirectship = values.allowdirectship;\r\n        let maineachprice = values.maineachprice;\r\n        let imagelink = values.imagelink;\r\n        \r\n        saveProduct({\r\n            available: available,\r\n            category:category,\r\n            subcategory: subcategory,\r\n            desc1: desc1,\r\n            desc2: desc2,\r\n            itemnumber: itemnumber,\r\n            manufacturer: manufacturer,\r\n            mfgpnumber: mfgpnumber,\r\n            msrp: msrp,\r\n            price1: price1,\r\n            price2: price2,\r\n            price3: price3,\r\n            qty1: qty1,\r\n            qty2: qty2,\r\n            qty3: qty3,\r\n            upc: upc,\r\n            weight: weight,\r\n            serialized: serialized,\r\n            mapprice: mapprice,\r\n            allowdirectship: allowdirectship,\r\n            maineachprice: maineachprice,\r\n            imagelink: imagelink\r\n        });\r\n\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const updateProduct = (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.available || values.available === \"\") {\r\n            toast.warning(\"Please input available!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.category || values.category === \"\") {\r\n            toast.warning(\"Please select category!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.subcategory || values.subcategory === \"\") {\r\n            toast.warning(\"Please input sub category!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.desc1 || values.desc1 === \"\") {\r\n            toast.warning(\"Please input description1!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.desc2 || values.desc2 === \"\") {\r\n            toast.warning(\"Please input description2!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.manufacturer || values.manufacturer === \"\") {\r\n            toast.warning(\"Please input manufacuturer!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.mfgpnumber || values.mfgpnumber === \"\") {\r\n            toast.warning(\"Please input mfgp number!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.msrp || values.msrp === \"\") {\r\n            toast.warning(\"Please input msrp!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.price1 || values.price1 === \"\") {\r\n            toast.warning(\"Please input price1!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.qty1 || values.qty1 === \"\") {\r\n            toast.warning(\"Please input qty1!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.upc || values.upc === \"\") {\r\n            toast.warning(\"Please input upc!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.weight || values.weight === \"\") {\r\n            toast.warning(\"Please input weight!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.serialized || values.serialized === \"\") {\r\n            toast.warning(\"Please select serialized!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.mapprice || values.mapprice === \"\") {\r\n            toast.warning(\"Please input map price!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.allowdirectship || values.allowdirectship === \"\") {\r\n            toast.warning(\"Please select allow direct ship!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.maineachprice || values.maineachprice === \"\") {\r\n            toast.warning(\"Please input main each price!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        let available = values.available;\r\n        let category = values.category;\r\n        let subcategory = values.subcategory;\r\n        let desc1 = values.desc1;\r\n        let desc2 = values.desc2;\r\n        let itemnumber = values.itemnumber;\r\n        let manufacturer = values.manufacturer;\r\n        let mfgpnumber = values.mfgpnumber;\r\n        let msrp = values.msrp;\r\n        let price1 = values.price1;\r\n        let price2 = values.price2;\r\n        let price3 = values.price3;\r\n        let qty1 = values.qty1;\r\n        let qty2 = values.qty2;\r\n        let qty3 = values.qty3;\r\n        let upc = values.upc;\r\n        let weight = values.weight;\r\n        let serialized = values.serialized;\r\n        let mapprice = values.mapprice;\r\n        let allowdirectship = values.allowdirectship;\r\n        let maineachprice = values.maineachprice;\r\n        let imagelink = values.imagelink;\r\n\r\n        reSaveProduct({\r\n            available: available,\r\n            category:category,\r\n            subcategory: subcategory,\r\n            desc1: desc1,\r\n            desc2: desc2,\r\n            itemnumber: itemnumber,\r\n            manufacturer: manufacturer,\r\n            mfgpnumber: mfgpnumber,\r\n            msrp: msrp,\r\n            price1: price1,\r\n            price2: price2,\r\n            price3: price3,\r\n            qty1: qty1,\r\n            qty2: qty2,\r\n            qty3: qty3,\r\n            upc: upc,\r\n            weight: weight,\r\n            serialized: serialized,\r\n            mapprice: mapprice,\r\n            allowdirectship: allowdirectship,\r\n            maineachprice: maineachprice,\r\n            imagelink: imagelink\r\n        });\r\n\r\n        emptyForm()\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const onFinish = (values) => {};\r\n\r\n    const onReset = () => {\r\n        emptyForm();\r\n    };\r\n\r\n    useEffect(() => {\r\n        emptyForm();\r\n    }, []);\r\n\r\n    // const filterEmployeeChange = (e) => {\r\n    //     setFilterEmployee(e.target.checked);\r\n    // }\r\n\r\n    // const filterContractorChange = (e) => {\r\n    //     setFilterContractor(e.target.checked);\r\n    // }\r\n\r\n    // const filterProducts = () => {\r\n    //     let tmp = productsTmp, tmp1 = [], tmp2 = [];\r\n\r\n    //     tmp.map(t => {\r\n    //         if(filterEmployee && filterContractor) {\r\n    //             if(t.payType === 'employee' || t.payType === 'contractor') {\r\n    //                 tmp1.push(t)\r\n    //             }\r\n    //         }else if(filterEmployee && !filterContractor) {\r\n    //             if(t.payType === 'employee') {\r\n    //                 tmp1.push(t)\r\n    //             }\r\n    //         }else if(!filterEmployee && filterContractor) {\r\n    //             if(t.payType === 'contractor') {\r\n    //                 tmp1.push(t)\r\n    //             }\r\n    //         }else{\r\n    //             return;\r\n    //         }\r\n    //     })\r\n\r\n    //     if(filterFullName && filterFullName !== \"\") {\r\n    //         tmp1.map(t => {\r\n    //             if(t.fullName.toLowerCase().includes(filterFullName.toLowerCase())) {\r\n    //                 tmp2.push(t)\r\n    //             }\r\n    //         })\r\n    //     }else{\r\n    //         tmp2 = [...tmp1]\r\n    //     }\r\n\r\n    //     setProducts(tmp2);\r\n    // }\r\n\r\n    // const filterClear = () => {\r\n    //     setProducts(productsTmp)\r\n    //     setFilterContractor(true)\r\n    //     setFilterEmployee(true)\r\n    //     setFilterFullName(null)\r\n    // }\r\n\r\n    // const productFullNameSearch = (ev) => {\r\n    //     setFilterFullName(ev.target.value)\r\n    // }\r\n\r\n    return (\r\n        <div className='page-container'>\r\n            <div className='w-100 m-auto' style={{padding: '0 10px'}}>\r\n                <div style={{marginBottom: '1rem', marginTop: '1rem'}}>\r\n                    <Button className='new-product' onClick={() => showModal('create')}>\r\n                        New Product\r\n                    </Button>\r\n                </div>\r\n                {/* <div className='filter-options desktop-filter'>\r\n                    <Checkbox checked={filterEmployee} onChange={e => filterEmployeeChange(e)}>Employee</Checkbox>\r\n                    <Checkbox checked={filterContractor} onChange={e => filterContractorChange(e)}>Contractor</Checkbox>\r\n                    <div>\r\n                        <Input placeholder='Search a full name' value={filterFullName} onChange={productFullNameSearch} />\r\n                    </div>\r\n                    <Button onClick={filterProducts}>\r\n                        Filter\r\n                    </Button>\r\n                    <Button onClick={filterClear} danger>\r\n                        Clear\r\n                    </Button>\r\n                </div> */}\r\n                <div className='page-content'>\r\n                    <ToastContainer />\r\n                    <div className=''>\r\n                        <Modal\r\n                            title={mode === 'create' ? \"Create New Product\" : \"Update Product\"}\r\n                            visible={isModalOpen}\r\n                            onCancel={handleCancel}\r\n                            footer={mode === 'create' ? [\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={createProduct}>\r\n                                    Create\r\n                                </Button>,\r\n                                <Button htmlType=\"button\" onClick={onReset}>\r\n                                    Reset\r\n                                </Button>,\r\n                                <Button type=\"link\" htmlType=\"button\" onClick={handleCancel}>\r\n                                    Cancel\r\n                                </Button>\r\n                            ] : [\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={updateProduct}>\r\n                                    Save\r\n                                </Button>,\r\n                                <Button type=\"link\" htmlType=\"button\" onClick={handleCancel}>\r\n                                    Cancel\r\n                                </Button>\r\n                            ]}\r\n                        >\r\n                            <Form\r\n                                form={form}\r\n                                name=\"control-hooks\"\r\n                                onFinish={onFinish}\r\n                                style={{\r\n                                    maxWidth: 600,\r\n                                }}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"available\"\r\n                                    label=\"Available\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onAvailableChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"category\"\r\n                                    label=\"Category\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"Select A Category\"\r\n                                        onChange={onCategoryChange}\r\n                                        allowClear\r\n                                        showSearch\r\n                                        optionFilterProp=\"children\"\r\n                                    >\r\n                                        {\r\n                                            category.map(ct => {\r\n                                                return <Option value={ct.value} key={ct.value}>{ct.label}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"subcategory\"\r\n                                    label=\"Sub Category\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onSubCategoryChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"desc1\"\r\n                                    label=\"Description1\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onDesc1Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"desc2\"\r\n                                    label=\"Description2\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onDesc2Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"itemnumber\"\r\n                                    label=\"Item Number\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onItemNumberChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"manufacturer\"\r\n                                    label=\"Manufacturer\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onManufacturerChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"mfgpnumber\"\r\n                                    label=\"MFGP Number\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onMfgpNumberChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"msrp\"\r\n                                    label=\"MSRP\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onMsrpChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"price1\"\r\n                                    label=\"Price1\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onPrice1Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"price2\"\r\n                                    label=\"Price2\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: false,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onPrice2Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"price3\"\r\n                                    label=\"Price3\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: false,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onPrice3Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"qty1\"\r\n                                    label=\"QTY1\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onQty1Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"qty2\"\r\n                                    label=\"QTY2\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: false,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onQty2Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"qty3\"\r\n                                    label=\"QTY3\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: false,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onQty3Change} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"upc\"\r\n                                    label=\"UPC\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onUpcChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"weight\"\r\n                                    label=\"Weight\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onWeightChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"serialized\"\r\n                                    label=\"Serialized\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"Select A Serialized\"\r\n                                        onChange={onSerializedChange}\r\n                                        allowClear\r\n                                        showSearch\r\n                                        optionFilterProp=\"children\"\r\n                                    >\r\n                                        {\r\n                                            ['YES', 'NO'].map(serialized => {\r\n                                                return <Option value={serialized} key={serialized}>{serialized}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"mapprice\"\r\n                                    label=\"Map Price\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onMapPriceChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"allowdirectship\"\r\n                                    label=\"Allow Direct Ship\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"Select A Allow Direct Ship\"\r\n                                        onChange={onAllowdirectshipChange}\r\n                                        allowClear\r\n                                        showSearch\r\n                                        optionFilterProp=\"children\"\r\n                                    >\r\n                                        {\r\n                                            ['YES', 'NO'].map(ads => {\r\n                                                return <Option value={ads} key={ads}>{ads}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"maineachprice\"\r\n                                    label=\"Main Each Price\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onMainEachPriceChange} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"imagelink\"\r\n                                    label=\"Image Link\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: false,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={onImageLinkChange} />\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                    <Form form={form} component={false}>\r\n                        <Table\r\n                            components={{\r\n                                body: {\r\n                                    cell: EditableCell,\r\n                                },\r\n                            }}\r\n                            scroll={{ x: 1000 }}\r\n                            bordered\r\n                            dataSource={products}\r\n                            columns={mergedColumns}\r\n                            rowClassName=\"editable-row\"\r\n                            pagination={{\r\n                                onChange: cancel,\r\n                                position: ['bottomLeft'],\r\n                                showSizeChanger: true,\r\n                                pageSizeOptions: ['10', '20', '30', '50', '100', '1000', '10000']\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Search\\index.js",["336","337","338","339"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport ZanderCard from '../../components/ui/ZanderCard';\r\nimport LipseyCard from '../../components/ui/LipseyCard';\r\nimport PersonalizedRecommendations from \"../Components/PersonalizedRecommendations\";\r\nimport UserContext from \"../../utils/UserContext\";\r\n\r\nconst productList = {\r\n    margin: '40px auto 40px auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'stretch',\r\n    gap: '20px'\r\n}\r\n\r\nconst Search = () => {\r\n    const { category, searchkey } = useParams();\r\n    const [products, setProducts] = useState([]);\r\n    const [pageCnt, setPageCnt] = useState(2);\r\n    const { setSpinning, customerId } = useContext(UserContext);\r\n\r\n    useEffect(async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getProductsBySearch({\r\n            category: category,\r\n            searchkey: searchkey,\r\n            limit: 1\r\n        });\r\n\r\n        setProducts(res.data.result)\r\n        setSpinning(false)\r\n    }, [category, searchkey]);\r\n\r\n    const loadMoreProducts = async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getProductsBySearch({\r\n            category: category,\r\n            searchkey: searchkey,\r\n            limit: pageCnt\r\n        });\r\n        setSpinning(false)\r\n        const productTmp = [...products, ...res.data.result];\r\n        setProducts(productTmp);\r\n        let cntIncrease = pageCnt + 1;\r\n        setPageCnt(cntIncrease)\r\n    }\r\n\r\n    // page log\r\n    useEffect(() => {\r\n        const pageLog = async () => {\r\n            let page = \"/search\"\r\n            if(category && category !== \"\") {\r\n                page += \"/\" + category;\r\n\r\n                if(searchkey && searchkey !== \"\") {\r\n                    page += \"/\" + searchkey;\r\n                }\r\n            }\r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: page\r\n            })\r\n        }\r\n\r\n        pageLog()\r\n    }, [customerId])\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div style={{ maxWidth: '1440px', margin: '40px auto' }}>\r\n                <div style={{paddingLeft: '20px'}}>\r\n                    Search Result by <strong>{category}, {searchkey}</strong>\r\n                </div>\r\n                <div className='product-list' style={productList}>\r\n                    {\r\n                        products.length !== 0 && products.map(p => {\r\n                            return p.isZander && <ZanderCard key={p._id} product={p} />\r\n                        })\r\n                    }\r\n                    {\r\n                        products.length !== 0 && products.map(p => {\r\n                            return p.isLipsey && <LipseyCard key={p._id} product={p} />\r\n                        })\r\n                    }\r\n                    {\r\n                        products.length === 0 && <div style={{marginLeft: '5px'}}>No products matched</div>\r\n                    }\r\n                </div>\r\n                {\r\n                    products.length > 7 && <div className=\"see-more-products\" onClick={loadMoreProducts}>\r\n                        <a>See More...</a>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <PersonalizedRecommendations />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\TermsUserAgreement\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Search\\Result\\index.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    useLocation,\r\n    Link,\r\n    useHistory\r\n} from \"react-router-dom\"\r\nimport { RightSquareFilled, PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Input, Radio, Button, Select, Pagination } from \"antd\";\r\nimport apis from \"../../../api\";\r\nimport ZanderCard from '../../../components/ui/ZanderCard';\r\nimport UserContext from \"../../../utils/UserContext\";\r\n\r\nconst productList = {\r\n    margin: '40px auto 40px auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'stretch',\r\n    gap: '20px'\r\n}\r\n\r\nconst Result = () => {\r\n    const { setSpinning, customerId } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n    const location = useLocation()\r\n    const queryParameters = new URLSearchParams(location.search)\r\n    const word = queryParameters.get('word');\r\n    const wordOption = queryParameters.get('wordOption');\r\n    const exclude = queryParameters.get('exclude');\r\n    const upc = queryParameters.get('upc');\r\n    const fromPrice = queryParameters.get('fromPrice');\r\n    const toPrice = queryParameters.get('toPrice');\r\n    const category = queryParameters.get('category');\r\n    const sortBy = queryParameters.get('sortBy');\r\n    const itemPerPage = queryParameters.get('itemPerPage');\r\n\r\n    const [type, setType] = useState(null);\r\n    const [sort, setSort] = useState(\"most_relevant\");\r\n    const [productStatus, setProductStatus] = useState({\r\n        fresh: false,\r\n        used: false,\r\n        old: false\r\n    })\r\n    const [itemPerPageValue, setItemPerPageValue] = useState(itemPerPage)\r\n    const [total, setTotal] = useState(0)\r\n    const [page, setPage] = useState(1)\r\n    const [pageCnt, setPageCnt] = useState(10)\r\n    const [products, setProducts] = useState([])\r\n    const [fromPriceValue, setFromPriceValue] = useState(fromPrice)\r\n    const [toPriceValue, setToPriceValue] = useState(toPrice)\r\n\r\n    useEffect(() => {\r\n        const getProductsByAdvancedSearch = async () => {\r\n            setSpinning(true)\r\n            const res = await apis.getProductsByAdvancedSearch({word, wordOption, exclude, upc, fromPrice, toPrice, category, sortBy, itemPerPage, page, type, ...productStatus})\r\n            setProducts(res.data.result)\r\n            setTotal(res.data.total)\r\n            setSpinning(false)\r\n        }\r\n        getProductsByAdvancedSearch()\r\n    }, [word, wordOption, exclude, upc, fromPrice, toPrice, category, sortBy, itemPerPage, type, productStatus.old, productStatus.fresh, productStatus.used, page, itemPerPageValue])\r\n\r\n    const typeChange = ({ target: { value } }) => {\r\n        setType(value)\r\n    }\r\n\r\n    const onSortByChange = (value) => {\r\n        setSort(value)\r\n    }\r\n\r\n    const newProduct = () => {\r\n        setProductStatus({\r\n            ...productStatus,\r\n            fresh: !productStatus.fresh\r\n        })\r\n    }\r\n\r\n    const usedProduct = () => {\r\n        setProductStatus({\r\n            ...productStatus,\r\n            used: !productStatus.used\r\n        })\r\n    }\r\n    \r\n    const oldProduct = () => {\r\n        setProductStatus({\r\n            ...productStatus,\r\n            old: !productStatus.old\r\n        })\r\n    }\r\n\r\n    const onItemPerPageChange = (value) => {\r\n        setItemPerPageValue(value)\r\n\r\n        const word = queryParameters.get('word');\r\n        const wordOption = queryParameters.get('wordOption');\r\n        const exclude = queryParameters.get('exclude');\r\n        const upc = queryParameters.get('upc');\r\n        const fromPrice = queryParameters.get('fromPrice');\r\n        const toPrice = queryParameters.get('toPrice');\r\n        const category = queryParameters.get('category');\r\n        const sortBy = queryParameters.get('sortBy');\r\n\r\n        let route = '/advanced-search-result?'\r\n        if(word && word !== \"\")\r\n            route += 'word' + \"=\" + word + '&'\r\n        if(wordOption && wordOption !== \"\")\r\n            route += 'wordOption' + \"=\" + wordOption + '&'\r\n        if(exclude && exclude !== \"\")\r\n            route += 'exclude' + \"=\" + exclude + '&'\r\n        if(upc && upc !== \"\")\r\n            route += 'upc' + \"=\" + upc + '&'\r\n        if(fromPrice && fromPrice !== \"\")\r\n            route += 'fromPrice' + \"=\" + fromPrice + '&'\r\n        if(toPrice && toPrice !== \"\")\r\n            route += 'toPrice' + \"=\" + toPrice + '&'\r\n        if(category && category !== \"\")\r\n            route += 'category' + \"=\" + category + '&'\r\n        if(sortBy && sortBy !== \"\")\r\n            route += 'sortBy' + \"=\" + sortBy + '&'\r\n        if(value && value !== \"\")\r\n            route += 'itemPerPage' + \"=\" + value + '&'\r\n\r\n        history.push(route)\r\n    }\r\n\r\n    const pageChange = (page, size) => {\r\n        setPage(page)\r\n        setItemPerPageValue(size)\r\n    }\r\n\r\n    const onFromPriceChange = (ev) => {\r\n        setFromPriceValue(ev.target.value)\r\n    }\r\n\r\n    const onToPriceChange = (ev) => {\r\n        setToPriceValue(ev.target.value)\r\n    }\r\n\r\n    const onPriceChange = () => {\r\n        const word = queryParameters.get('word');\r\n        const wordOption = queryParameters.get('wordOption');\r\n        const exclude = queryParameters.get('exclude');\r\n        const upc = queryParameters.get('upc');\r\n        const sortBy = queryParameters.get('sortBy');\r\n        const itemPerPage = queryParameters.get('itemPerPage');\r\n\r\n        let route = '/advanced-search-result?'\r\n        if(word && word !== \"\")\r\n            route += 'word' + \"=\" + word + '&'\r\n        if(wordOption && wordOption !== \"\")\r\n            route += 'wordOption' + \"=\" + wordOption + '&'\r\n        if(exclude && exclude !== \"\")\r\n            route += 'exclude' + \"=\" + exclude + '&'\r\n        if(upc && upc !== \"\")\r\n            route += 'upc' + \"=\" + upc + '&'\r\n        if(fromPriceValue && fromPriceValue !== \"\")\r\n            route += 'fromPrice' + \"=\" + fromPriceValue + '&'\r\n        if(toPriceValue && toPriceValue !== \"\")\r\n            route += 'toPrice' + \"=\" + toPriceValue + '&'\r\n        if(category && category !== \"\")\r\n            route += 'category' + \"=\" + category + '&'\r\n        if(sortBy && sortBy !== \"\")\r\n            route += 'sortBy' + \"=\" + sortBy + '&'\r\n        if(itemPerPage && itemPerPage !== \"\")\r\n            route += 'itemPerPage' + \"=\" + itemPerPage + '&'\r\n\r\n        history.push(route)\r\n    }\r\n\r\n    // page log\r\n    useEffect(() => {\r\n        const pageLog = async () => {\r\n            let route = '/advanced-search-result?'\r\n            if(word && word !== \"\")\r\n                route += 'word' + \"=\" + word + '&'\r\n            if(wordOption && wordOption !== \"\")\r\n                route += 'wordOption' + \"=\" + wordOption + '&'\r\n            if(exclude && exclude !== \"\")\r\n                route += 'exclude' + \"=\" + exclude + '&'\r\n            if(upc && upc !== \"\")\r\n                route += 'upc' + \"=\" + upc + '&'\r\n            if(fromPrice && fromPrice !== \"\")\r\n                route += 'fromPrice' + \"=\" + fromPrice + '&'\r\n            if(toPrice && toPrice !== \"\")\r\n                route += 'toPrice' + \"=\" + toPrice + '&'\r\n            if(category && category !== \"\")\r\n                route += 'category' + \"=\" + category + '&'\r\n            if(sortBy && sortBy !== \"\")\r\n                route += 'sortBy' + \"=\" + sortBy + '&'\r\n            if(itemPerPage && itemPerPage !== \"\")\r\n                route += 'itemPerPage' + \"=\" + itemPerPage + '&'\r\n            \r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: route\r\n            })\r\n        }\r\n\r\n        pageLog()\r\n    }, [customerId])\r\n\r\n    return <div className=\"advanced-search-result\">\r\n        <div className=\"sidebar-filter\">\r\n            <div className=\"title\">\r\n                <h4>Filters</h4>\r\n                <a href=\"/advanced-search-result\">Clear All</a>\r\n            </div>\r\n            <hr />\r\n            <div className=\"price\">\r\n                <h5>Price Range</h5>\r\n                <div className=\"price-form\">\r\n                    <span>$ </span>\r\n                    <Input value={fromPriceValue} onChange={onFromPriceChange} />\r\n                    <span> to </span>\r\n                    <span> $ </span>\r\n                    <Input value={toPriceValue} onChange={onToPriceChange} />\r\n                    <RightSquareFilled onClick={onPriceChange} style={{ fontSize: '32px', cursor: 'pointer', color: '#006400' }} />\r\n                </div>\r\n            </div>\r\n            {/* <hr />\r\n            <div className=\"Categories\">\r\n\r\n            </div> */}\r\n        </div>\r\n        <div className=\"search-result\">\r\n            <div className=\"search-options\">\r\n                <div className=\"search-keys\">\r\n                    <div>\r\n                        <div style={{ fontSize: '16px', color: '#555' }}>\r\n                            {\r\n                                word && category && (category != \"All\" && category != \"all\") ? `Results for ${word} in ${category}` : null \r\n                            }\r\n                            {\r\n                                !word && category && (category != \"All\" && category != \"all\") ? `Results for ${category}` : null \r\n                            }\r\n                            {\r\n                                word && (!category || category === \"All\" || category === \"all\") ? `Results for ${word}` : null \r\n                            }\r\n                            {\r\n                                !word && !category && products.length === 0 && <span>No results found or search too broad</span>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <a style={{ color: '#006400' }}>\r\n                                <PlusCircleOutlined />\r\n                                <span style={{ marginLeft: '4px' }}>\r\n                                    Save this search\r\n                                </span>\r\n                            </a>\r\n                            <span> | </span>\r\n                            <span>{ products.length } Items Found</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-key-buttons\">\r\n                    <div>\r\n                        <Radio.Group options={[\r\n                            {\r\n                                label: 'Buy Now',\r\n                                value: 'buynow',\r\n                            },\r\n                            {\r\n                                label: 'Auctions',\r\n                                value: 'auctions',\r\n                            },\r\n                            {\r\n                                label: 'Take a Shot',\r\n                                value: 'take_shot',\r\n                            },\r\n                        ]} onChange={typeChange} value={type} optionType=\"button\" buttonStyle=\"solid\" />\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={newProduct} type={productStatus.fresh ? \"primary\" : \"\"}>New</Button>\r\n                        <Button onClick={usedProduct} type={productStatus.used ? \"primary\" : \"\"}>Used</Button>\r\n                        <Button onClick={oldProduct} type={productStatus.old ? \"primary\" : \"\"}>Old Stock</Button>\r\n                    </div>\r\n                    <div>\r\n                        <Select\r\n                            value={sort}\r\n                            style={{\r\n                                width: '200px',\r\n                            }}\r\n                            onChange={onSortByChange}\r\n                            options={[\r\n                                {\r\n                                    value: 'most_relevant',\r\n                                    label: 'Most Relevant First',\r\n                                },\r\n                                {\r\n                                    value: 'time_ending_soonest',\r\n                                    label: 'Time: Ending Soonest',\r\n                                },\r\n                                {\r\n                                    value: 'time_ending_latest',\r\n                                    label: 'Time: Ending Latest',\r\n                                },\r\n                                {\r\n                                    value: 'price_low_high',\r\n                                    label: 'Price: Low to High',\r\n                                },\r\n                                {\r\n                                    value: 'price_high_low',\r\n                                    label: 'Price: High to Low',\r\n                                },\r\n                                {\r\n                                    value: 'bid_low_high',\r\n                                    label: 'Bid Count: Low to High',\r\n                                },\r\n                                {\r\n                                    value: 'bid_high_low',\r\n                                    label: 'Bid Count: High to Low',\r\n                                },\r\n                                {\r\n                                    value: 'time_old_new',\r\n                                    label: 'Time: Oldest to Newest',\r\n                                },\r\n                                {\r\n                                    value: 'time_new_old',\r\n                                    label: 'Time: Newest to Oldest',\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"searched-products\">\r\n                <div className=\"products\">\r\n                    {\r\n                        products.length === 0 && <p>\r\n                            There are <span style={{color: '#006400', fontWeight: 'bold'}}>0</span> items that match your criteria.\r\n                            Please specify either a Keyword or a Category to perform this search. For more complex searches you may use the <Link style={{color: '#006400', fontWeight: 'bold'}} to=\"/advanced-search\">Advanced Search</Link> function.\r\n                        </p>\r\n                    }\r\n                    {\r\n                        products.length !== 0 && <div className='product-list' style={productList}>\r\n                            {\r\n                                products.length !== 0 && products.map(p => {\r\n                                    return <ZanderCard key={p._id} product={p} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div className=\"pagination\">\r\n                    <div>\r\n                        <Pagination\r\n                            total={total}\r\n                            showTotal={(total) => `Total ${total} items`}\r\n                            onChange={pageChange}\r\n                            defaultCurrent={page}\r\n                            defaultPageSize={itemPerPageValue}\r\n                            pageSize={itemPerPageValue}\r\n                            current={page}\r\n                            style={{marginBottom: '20px', marginTop: '20px'}}\r\n                        />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginRight: '10px'}}>\r\n                            Results per page\r\n                        </span>\r\n                        <Select\r\n                            value={itemPerPageValue}\r\n                            style={{\r\n                                width: '80px',\r\n                            }}\r\n                            onChange={onItemPerPageChange}\r\n                            options={[\r\n                                {\r\n                                    value: 6,\r\n                                    label: 6,\r\n                                },\r\n                                {\r\n                                    value: 12,\r\n                                    label: 12,\r\n                                },\r\n                                {\r\n                                    value: 24,\r\n                                    label: 24,\r\n                                },\r\n                                {\r\n                                    value: 48,\r\n                                    label: 48,\r\n                                },\r\n                                {\r\n                                    value: 96,\r\n                                    label: 96,\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"empty-sidebar\"></div>\r\n    </div>\r\n}\r\n\r\nexport default Result;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Search\\Advanced\\index.js",["377","378"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Input, message, Button, Select } from 'antd';\r\nimport categories from '../../../utils/category';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from \"../../../utils/UserContext\";\r\nimport apis from \"../../../api\";\r\n\r\nconst AdvancedSearch = () => {\r\n    const { customerId } = useContext(UserContext);\r\n\r\n    const history = useHistory()\r\n\r\n    const [param, setParam] = useState({\r\n        word: \"\",\r\n        wordOption: \"all\",\r\n        exclude: \"\",\r\n        upc: \"\",\r\n        fromPrice: null,\r\n        toPrice: null,\r\n        category: \"all\",\r\n        sortBy: \"most_relevant\",\r\n        itemPerPage: 24\r\n    })\r\n\r\n    const onSearchWordChange = (ev) => {\r\n        setParam({...param, word: ev.target.value})\r\n    }\r\n\r\n    const onSearchWordOptionChange = (value) => {\r\n        setParam({...param, wordOption: value})\r\n    }\r\n\r\n    const onExcludeWordChange = (ev) => {\r\n        setParam({...param, exclude: ev.target.value})\r\n    }\r\n\r\n    const onUpcChange = (ev) => {\r\n        setParam({...param, upc: ev.target.value})\r\n    }\r\n\r\n    const onFromPriceChange = (ev) => {\r\n        setParam({...param, fromPrice: ev.target.value})\r\n    }\r\n\r\n    const onToPriceChange = (ev) => {\r\n        setParam({...param, toPrice: ev.target.value})\r\n    }\r\n\r\n    const onCategoryChange = (value) => {\r\n        setParam({...param, category: value})\r\n    }\r\n\r\n    const onSortByChange = (value) => {\r\n        setParam({...param, sortBy: value})\r\n    }\r\n\r\n    const onItemPerPageChange = (value) => {\r\n        setParam({...param, itemPerPage: value})\r\n    }\r\n\r\n    const onClearFields = () => {\r\n        setParam({\r\n            ...param,\r\n            word: \"\",\r\n            wordOption: \"all\",\r\n            exclude: \"\",\r\n            upc: \"\",\r\n            fromPrice: null,\r\n            toPrice: null,\r\n            category: \"all\",\r\n            sortBy: \"most_relevant\",\r\n            itemPerPage: 24\r\n        })\r\n    }\r\n\r\n    const search = () => {\r\n        let route = \"/advanced-search-result?\"\r\n        for (const key in param) {\r\n            if(param[key] && param[key] != \"\")\r\n                route += key + \"=\" + param[key] + '&'\r\n        }\r\n        history.push(route)\r\n    }\r\n\r\n    // page log\r\n    useEffect(() => {\r\n        const pageLog = async () => {\r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: '/advanced-search'\r\n            })\r\n        }\r\n\r\n        pageLog()\r\n    }, [customerId])\r\n    \r\n    return <div className=\"advanced-search\">\r\n        <h2 style={{color: '#006400'}}>Advanced Search</h2>\r\n        <div className=\"search-box\">\r\n            <div className=\"action\">\r\n                <Button type=\"dashed\" onClick={onClearFields}>Clear Fields</Button>\r\n                <Button onClick={search}>Search</Button>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Search Words</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <div className=\"input\">\r\n                        <Input onChange={onSearchWordChange} value={param.word} />\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <Select\r\n                            defaultValue={'all'}\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                            onChange={onSearchWordOptionChange}\r\n                            options={[\r\n                                {\r\n                                    value: 'all',\r\n                                    label: 'All of these words',\r\n                                },\r\n                                {\r\n                                    value: 'any',\r\n                                    label: 'Any of these words',\r\n                                },\r\n                                {\r\n                                    value: 'exact',\r\n                                    label: 'Exact Phrase',\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Words to Exclude</span>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <Input onChange={onExcludeWordChange} value={param.exclude} />\r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Search By UPC</span>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <Input onChange={onUpcChange} value={param.upc} />\r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Current Price</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <div className=\"input\">\r\n                        <Input type=\"number\" onChange={onFromPriceChange} value={param.fromPrice} />\r\n                    </div>\r\n                    <div>to</div>\r\n                    <div className=\"input\">\r\n                        <Input type=\"number\" onChange={onToPriceChange} value={param.toPrice} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Search Category</span>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <Select\r\n                        value={param.category}\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                        onChange={onCategoryChange}\r\n                        options={[{\r\n                            label: 'All',\r\n                            value: 'all'\r\n                        }, ...categories]}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Sort By</span>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <Select\r\n                        value={param.sortBy}\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                        onChange={onSortByChange}\r\n                        options={[\r\n                            {\r\n                                value: 'most_relevant',\r\n                                label: 'Most Relevant First',\r\n                            },\r\n                            {\r\n                                value: 'time_ending_soonest',\r\n                                label: 'Time: Ending Soonest',\r\n                            },\r\n                            {\r\n                                value: 'time_ending_latest',\r\n                                label: 'Time: Ending Latest',\r\n                            },\r\n                            {\r\n                                value: 'price_low_high',\r\n                                label: 'Price: Low to High',\r\n                            },\r\n                            {\r\n                                value: 'price_high_low',\r\n                                label: 'Price: High to Low',\r\n                            },\r\n                            {\r\n                                value: 'bid_low_high',\r\n                                label: 'Bid Count: Low to High',\r\n                            },\r\n                            {\r\n                                value: 'bid_high_low',\r\n                                label: 'Bid Count: High to Low',\r\n                            },\r\n                            {\r\n                                value: 'time_old_new',\r\n                                label: 'Time: Oldest to Newest',\r\n                            },\r\n                            {\r\n                                value: 'time_new_old',\r\n                                label: 'Time: Newest to Oldest',\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n                <div className=\"label\">\r\n                    <span>Items per Page</span>\r\n                </div>\r\n                <div className=\"input\">\r\n                    <Select\r\n                        value={param.itemPerPage}\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                        onChange={onItemPerPageChange}\r\n                        options={[\r\n                            {\r\n                                value: 6,\r\n                                label: 6,\r\n                            },\r\n                            {\r\n                                value: 12,\r\n                                label: 12,\r\n                            },\r\n                            {\r\n                                value: 24,\r\n                                label: 24,\r\n                            },\r\n                            {\r\n                                value: 48,\r\n                                label: 48,\r\n                            },\r\n                            {\r\n                                value: 96,\r\n                                label: 96,\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"action\">\r\n                <Button type=\"dashed\" onClick={onClearFields}>Clear Fields</Button>\r\n                <Button onClick={search}>Search</Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AdvancedSearch;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ReturnPolicy\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ShippingPolicy\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\PrivacyPolicy\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\ContactUs\\index.js",["379","380","381"],"import { Form, Input, message, Select, Checkbox, Button } from 'antd';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport apis from '../../api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport UserContext from '../../utils/UserContext';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst ContactUs = () => {\r\n    const { setSpinning, customerId } = useContext(UserContext);\r\n\r\n    const [ppua, setPpua] = useState(false)\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => { };\r\n\r\n    const onEmailChange = (ev) => {\r\n        form.setFieldsValue({\r\n            email: ev.target.value,\r\n        });\r\n    }\r\n\r\n    const onSubjectChange = (ev) => {\r\n        form.setFieldsValue({\r\n            subject: ev.target.value,\r\n        });\r\n    }\r\n\r\n    const onWhatChange = (ev) => {\r\n        form.setFieldsValue({\r\n            what: ev,\r\n        });\r\n    }\r\n\r\n    const onDescriptionChange = (ev) => {\r\n        form.setFieldsValue({\r\n            description: ev.target.value,\r\n        });\r\n    }\r\n\r\n    const onPPUAChange = (ev) => {\r\n        setPpua(ev.target.checked)\r\n    }\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        const values = form.getFieldsValue();\r\n\r\n        if (!values.email || values.email === \"\") {\r\n            toast.warning(\"Please input email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.subject || values.subject === \"\") {\r\n            toast.warning(\"Please input subject!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.what || values.what === \"\") {\r\n            toast.warning(\"Please select what question you have about!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if (!values.description || values.description === \"\") {\r\n            toast.warning(\"Please input description!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n        if(!ppua) {\r\n            toast.warning(\"Please check privacy policy and user agreement!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            return;\r\n        }\r\n\r\n        const param = {...values, ppua}\r\n\r\n        setSpinning(true)\r\n        await apis.submitContact(param)\r\n        setSpinning(false)\r\n        message.success(\"Successfully Submit!\")\r\n    }\r\n\r\n    // page log\r\n    useEffect(() => {\r\n        const pageLog = async () => {\r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: '/contact-us'\r\n            })\r\n        }\r\n\r\n        pageLog()\r\n    }, [customerId])\r\n    \r\n    return (\r\n        <div className='contact-page'>\r\n            <ToastContainer />\r\n            <h2 style={{marginBottom: '25px'}}>Contact Us</h2>\r\n            <Form\r\n                form={form}\r\n                name=\"control-hooks\"\r\n                onFinish={onFinish}\r\n                style={{\r\n                    maxWidth: 1200,\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input onChange={onEmailChange} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"subject\"\r\n                    label=\"Subject\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input onChange={onSubjectChange} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"what\"\r\n                    label=\"What do you have a question about?\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"\"\r\n                        onChange={onWhatChange}\r\n                        allowClear\r\n                        showSearch\r\n                        optionFilterProp=\"children\"\r\n                        defaultValue={\"\"}\r\n                    >\r\n                        {\r\n                            [\r\n                                {\r\n                                    label: \"-\",\r\n                                    value: \"\"\r\n                                },\r\n                                {\r\n                                    label: \"Account, Login or Registration\",\r\n                                    value: \"auth\"\r\n                                },\r\n                                {\r\n                                    label: \"Buying (Search, Bids, Purchase, Orders)\",\r\n                                    value: \"buying\"\r\n                                },\r\n                                {\r\n                                    label: \"Selling (Listing, Payments, Fees, Taxes)\",\r\n                                    value: \"selling\"\r\n                                },\r\n                                {\r\n                                    label: \"OutdoorPay\",\r\n                                    value: \"outdoorpay\"\r\n                                },\r\n                                {\r\n                                    label: \"Legal and Data Issues\",\r\n                                    value: \"issues\"\r\n                                }\r\n                            ].map(ct => {\r\n                                return <Option value={ct.value} key={ct.value}>{ct.label}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <TextArea onChange={onDescriptionChange} />\r\n                    <small>\r\n                    Please enter the details of your request. A member of our support staff will respond as soon as possible.\r\n                    </small>\r\n                </Form.Item>\r\n                <Checkbox onChange={onPPUAChange}>I agree to the GunBroker.com <Link to=\"/privacy-policy\">Privacy Policy</Link> and <Link to=\"user-agreement\">User Agreement</Link></Checkbox>\r\n            </Form>\r\n\r\n            <Button style={{marginTop: '2rem'}} onClick={onSubmit}>Submit</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactUs;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\NewHome\\index.js",["382","383","384","385","386","387","388","389"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport apis from '../../api';\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\nimport images from '../../utils/images';\r\nimport PersonalizedRecommendations from '../Components/PersonalizedRecommendations';\r\nimport { Link } from 'react-router-dom';\r\nimport UserContext from '../../utils/UserContext'\r\n\r\nconst Slider = () => {\r\n\tconst slideImages = [\r\n\t\t{\r\n\t\t\turl: images.homeSlide1,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: 'KRISS VECTOR SDP-E G2 9MM 6.5\" ',\r\n\t\t\t\tsubtitle: \"THREADED W/RAIL 40RD ALPINE\",\r\n\t\t\t\tprice: \"$1161.50\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: images.homeSlide2,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: \"ZASTAVA ZPAP85 PISTOL 5.56*45\",\r\n\t\t\t\tsubtitle: \"30RD BLUED/WOOD BOOSTER RAILS\",\r\n\t\t\t\tprice: \"$939.95\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: images.homeSlide3,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: \"BLACK RAIN SPEC+ FUSION RIFLE\",\r\n\t\t\t\tsubtitle: '5.56 16\" TIFFANY BLUE 30RD',\r\n\t\t\t\tprice: \"$1086.95\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: images.homeSlide4,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: 'WALTHER PPQ M2 Q5 SF MATCH PRO',\r\n\t\t\t\tsubtitle: '9MM 5\" 17-SHOT BLACK',\r\n\t\t\t\tprice: \"$1329.95\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: images.homeSlide5,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: 'COLT PYTHON .357MAG 6\" SS',\r\n\t\t\t\tsubtitle: 'ADJ SIGHT WALNUT GREEN FO',\r\n\t\t\t\tprice: \"$1275\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: images.homeSlide6,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: 'MARLIN 1895 TRAPPER 45-70',\r\n\t\t\t\tsubtitle: '16.5\" S/S LAMINATED LARGE LOOP',\r\n\t\t\t\tprice: \"$992\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: images.homeSlide7,\r\n\t\t\tcaption: {\r\n\t\t\t\ttitle: 'KEL-TEC RDB BULLPUP 5.56MM',\r\n\t\t\t\tsubtitle: '17.3\" BLACK 20RD',\r\n\t\t\t\tprice: \"$851.95\"\r\n\t\t\t}\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"slide-container\" style={{\r\n\t\t\tmaxWidth: '1440px',\r\n\t\t\tmargin: '0 auto'\r\n\t\t}}>\r\n\t\t\t<Slide autoplay={true} duration={2500} pauseOnHover={true} >\r\n\t\t\t\t{slideImages.map((slideImage, index) => (\r\n\t\t\t\t\t<div key={index} className={'slide-item slide-item-' + index}>\r\n\t\t\t\t\t\t<div className='caption'>\r\n\t\t\t\t\t\t\t<div style={{ fontSize: '28px', fontWeight: '700' }}>{slideImage.caption.title}</div>\r\n\t\t\t\t\t\t\t<div style={{ fontSize: '26px', marginTop: '10px' }}>{slideImage.caption.subtitle}</div>\r\n\t\t\t\t\t\t\t<div style={{ fontSize: '24px', marginTop: '20px', color: '#febd69', fontWeight: '600' }}>{slideImage.caption.price}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='image'>\r\n\t\t\t\t\t\t\t<img src={slideImage.url.src} style={{maxWidth: '100%', maxHeight: '100%'}} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</Slide>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst CategoryProduct = (props) => {\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<div className='category-container'>\r\n\t\t\t\t<div className='category-card-header'>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className='category-card-body'>\r\n\t\t\t\t\t<div className='card-row'>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[0]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[0].isZander ? props.products[0].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[0].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[0].isZander ? props.products[0].desc1 : props.products[0].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[1]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[1].isZander ? props.products[1].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[1].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[1].isZander ? props.products[1].desc1 : props.products[1].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card-row'>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[2]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[2].isZander ? props.products[2].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[2].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[2].isZander ? props.products[2].desc1 : props.products[2].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[3]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[3].isZander ? props.products[3].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[3].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[3].isZander ? props.products[3].desc1 : props.products[3].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<div className='category-card-footer'>\r\n\t\t\t\t\t<Link to={\"/search/\" + props.category}>\r\n\t\t\t\t\t\t<span>See more</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst TopSeller = (props) => {\r\n\treturn <div className='card'>\r\n\t\t<div className='category-container'>\r\n\t\t\t<div className='category-card-header'>\r\n\t\t\t\t<h2>Top Sellers</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='category-card-body'>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.products.length >= 2 && <div className='card-row'>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[0]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[0].imagelink ? props.products[0].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[0].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[0].desc1 ? props.products[0].desc1 : props.products[0].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[1]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[1].imagelink ? props.products[1].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[1].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[1].desc1 ? props.products[1].desc1 : props.products[1].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.products.length >= 4  && <div className='card-row'>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[2]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[2].imagelink ? props.products[2].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[2].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[2].desc1 ? props.products[2].desc1 : props.products[2].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='card-row-column'>\r\n\t\t\t\t\t\t\t<Link to={\"/product/\" + props.products[3]._id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<img src={props.products[3].imagelink ? props.products[3].imagelink : \"https://www.lipseyscloud.com/images/\" + props.products[3].imageName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>{props.products[3].desc1 ? props.products[3].desc1 : props.products[3].description1}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className='category-card-footer'>\r\n\t\t\t\t<Link to={\"/search/top-seller\"}>\r\n\t\t\t\t\t<span>See more</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Home = () => {\r\n\tconst { setSpinning } = useContext(UserContext);\r\n\tconst [categoryProducts, setCategoryProducts] = useState([]);\r\n\tconst [slideProducts, setSlideProducts] = useState([]);\r\n\tconst [topProducts, setTopProducts] = useState([]);\r\n\r\n\tuseEffect(async () => {\r\n\t\tsetSpinning(true)\r\n\t\tconst res = await apis.getProductsByCategory();\r\n\t\tsetCategoryProducts(res.data.result);\r\n\t\tsetTopProducts(res.data.products)\t\t\r\n\t\tsetSpinning(false)\r\n\t}, []);\r\n\tif(categoryProducts[1])\r\n\tconsole.log(categoryProducts[1].products[0]._id);\r\n\r\n\treturn (\r\n\t\t<section className='new-home'>\r\n\t\t\t<Slider products={slideProducts} />\r\n\t\t\t{\r\n\t\t\t\tcategoryProducts.length > 0 && <>\r\n\t\t\t\t\t<div className='categories'>\r\n\t\t\t\t\t\t<TopSeller products={topProducts} />\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcategoryProducts.map(cp => {\r\n\t\t\t\t\t\t\t\treturn cp.products.length !== 0 && <CategoryProduct key={cp.category.value} products={cp.products} title={cp.category.label} category={cp.category.value} />\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<PersonalizedRecommendations />\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default Home;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\FFLDealer\\index.js",["390","391","392","393","394","395","396","397"],"import React, { useState, useContext } from \"react\";\r\nimport { Button, Modal, Space, Input, Typography, Select, Drawer, message, DatePicker } from 'antd';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport apis from \"../../api\";\r\nimport {\r\n    FileOutlined,\r\n    EnvironmentOutlined\r\n} from '@ant-design/icons';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport UserContext from \"../../utils/UserContext\";\r\n\r\nconst Marker = ({ children }) => children;\r\n\r\nconst InfoWindow = ({ children }) => children;\r\n\r\nconst API_KEY = \"AIzaSyDDmRHy7x10C8X678t_Ybh2TpvNW1TNADc\";\r\n\r\nconst FFLDealer = (props) => {\r\n    const { setSpinning } = useContext(UserContext);\r\n    const [distance, setDistance] = useState(25);\r\n    const [zipCode, setZipCode] = useState('');\r\n    const [dealers, setDealers] = useState([]);\r\n    const [selectedDealer, setSelectedDealer] = useState(null);\r\n    const [currentPos, setCurrentPos] = useState({});\r\n    const [pickedDealer, setPickedDealer] = useState(null);\r\n\r\n    const handleZipCodeChange = (ev) => {\r\n        setZipCode(ev.target.value)\r\n    }\r\n\r\n    const handleDistanceChange = (value) => {\r\n        setDistance(value)\r\n    };\r\n\r\n    const findDealers = async (ev) => {\r\n        ev.preventDefault();\r\n\r\n        if (!zipCode || zipCode === \"\") {\r\n            toast.warning(\"Please input zip code!\", {\r\n                position: toast.POSITION.TOP_LEFT\r\n            });\r\n            return;\r\n        }\r\n        setSpinning(true)\r\n        const res = await apis.getFflDealers({\r\n\t\t\t\"radius\": distance,\r\n\t\t\t\"zipcode\": zipCode\r\n\t\t});\r\n        setSpinning(false)\r\n        if(res.data.dealers.length > 0) {\r\n            setDealers(res.data.dealers)\r\n            setCurrentPos({ lat: res.data.dealers[1].lat, lng: res.data.dealers[1].lng })\r\n        }else{\r\n            message.info(\"No dealers found. Please increase the distance.\")\r\n        }\r\n    }\r\n\r\n    const mapIt = (dealer) => {\r\n        setSelectedDealer(dealer)\r\n    }\r\n\r\n    const pickFflDealer = (dealer) => {\r\n        props.pickFflDealer(dealer)\r\n        setPickedDealer(dealer)\r\n    }\r\n \r\n    return (\r\n        <div className='ffl-dealer' style={{ marginTop: '20px' }}>\r\n            <ToastContainer />\r\n            <div style={{maxWidth: '1480px', margin: '0 auto', padding: '20px', minHeight: '500px'}}>\r\n                <h2 style={{color: '#006400'}}>Find a Federal Firearms License Dealer Near You</h2>\r\n                <h3>Search the aotactical.com network for transfer agents near you.</h3>\r\n\r\n                <Typography.Title level={5}>By Distance & Zip code:</Typography.Title>\r\n                <div style={{display: 'flex', justifyContent: 'flex-start', gap: '20px'}}>\r\n                    <Select\r\n                        defaultValue={25}\r\n                        style={{\r\n                            width: '25%',\r\n                        }}\r\n                        onChange={handleDistanceChange}\r\n                        options={[\r\n                            {\r\n                                value: 5,\r\n                                label: '5 Miles',\r\n                            },\r\n                            {\r\n                                value: 15,\r\n                                label: '15 Miles',\r\n                            },\r\n                            {\r\n                                value: 25,\r\n                                label: '25 Miles',\r\n                            },\r\n                            {\r\n                                value: 50,\r\n                                label: '50 Miles',\r\n                            },\r\n                            {\r\n                                value: 100,\r\n                                label: '100 Miles',\r\n                            },\r\n                        ]}\r\n                    />\r\n                    <Input style={{width: '25%'}} placeholder=\"Zipcode\" onChange={handleZipCodeChange} />\r\n                    <Button style={{width: '25%', color: '#006400'}} onClick={findDealers}>Find Dealers</Button>\r\n                </div>\r\n                {\r\n                    selectedDealer && <div style={{ height: '300px', width: '100%', marginTop: '20px' }}>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: API_KEY }}\r\n                            defaultZoom={11}\r\n                            center={currentPos}\r\n                        >\r\n                            <Marker\r\n                                lat={selectedDealer.lat}\r\n                                lng={selectedDealer.lng}\r\n                            >\r\n                                <img src=\"mark.png\" style={{width: '50px'}} />\r\n                            </Marker>\r\n                            {/* <InfoWindow\r\n                                lat={selectedDealer.lat}\r\n                                lng={selectedDealer.lng}\r\n                            >\r\n                                <div style={{backgroundColor: '#fff', color: '#000'}}>\r\n                                {\r\n                                    selectedDealer.business_name || selectedDealer.license_name\r\n                                }\r\n                                </div>\r\n                            </InfoWindow> */}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                }\r\n                {\r\n                    dealers.length > 0 && <div className=\"dealer-list\" style={{marginTop: '20px'}}>\r\n                        <h4 style={{\r\n                            margin: 0,\r\n                            fontSize: '13px',\r\n                            fontWeight: 600,\r\n                            backgroundColor: '#555',\r\n                            color: '#fff'\r\n                        }}>\r\n                            <span style={{display: 'block', padding: '10px 15px'}}>Search Result:</span>\r\n                        </h4>\r\n                        {\r\n                            dealers.map(dealer => {\r\n                                return <div key={dealer.license_number} style={dealer.business_name === pickedDealer?.business_name ? {padding: '10px 15px', border: '1px solid #d9d9d9', backgroundColor: 'rgba(0, 100, 0, 0.3)'} : {padding: '10px 15px', border: '1px solid #d9d9d9'}} onClick={() => pickFflDealer(dealer)}>\r\n                                    <h3 style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                        <span>\r\n                                            {dealer.business_name || dealer.license_name} ({dealer.license_number})\r\n                                        </span>\r\n                                        <span>\r\n                                            {\r\n                                                dealer.ffl_on_file > 0 && <a style={{color: '#006400'}}>\r\n                                                    <FileOutlined />\r\n                                                    FFL on file\r\n                                                </a>\r\n                                            }\r\n                                            {\r\n                                                (dealer.lat && dealer.lng) && <a style={{marginLeft: '20px', color: '#006400'}} onClick={() => mapIt(dealer)}>\r\n                                                    <EnvironmentOutlined />\r\n                                                    Map it\r\n                                                </a>\r\n                                            }\r\n                                        </span>\r\n                                    </h3>\r\n                                    <div style={{marginBottom: '0.5em'}}>\r\n                                        <h4>Address:</h4>\r\n                                        <div>{dealer.premise_city}, {dealer.premise_state}</div>\r\n                                        <div>{dealer.premise_street}</div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4>Phone:</h4>\r\n                                        <div>{dealer.voice_phone}</div>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FFLDealer;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\ZanderCard.js",["398","399"],"import React, { useContext, useEffect } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport UserContext from '../../utils/UserContext';\r\nimport { message } from 'antd';\r\n\r\nconst ProductCard = (props) => {\r\n    const { cart, setCart } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        history.push(\"/product/\" + props.product._id)\r\n    }\r\n\r\n    const addCart = async (e) => {\r\n        e.stopPropagation()\r\n\r\n        if(cart.filter(ct => ct.itemnumber === props.product.itemnumber).length === 0) {\r\n            setCart([...cart, {...props.product, cartCnt: 1}]);\r\n        }else{\r\n            cart.map(ct => {\r\n                if(ct.itemnumber === props.product.itemnumber) {\r\n                    ct['cartCnt'] += 1\r\n                }\r\n            })\r\n            setCart([...cart])\r\n        }\r\n\r\n        message.success(\"Added to Cart successfully!\")\r\n    }\r\n\r\n    return (\r\n        <div className='product-card-container'>\r\n            <div className='product-card' onClick={goToDetail}>\r\n                <div className='product-image'>\r\n                    <LazyLoadImage\r\n                        src={props.product.imagelink}\r\n                        alt={'product image'}\r\n                    />\r\n                </div>\r\n                <div className='product-caption'>\r\n                    <div className='product-title'>\r\n                        {\r\n                            props.product.desc1 + ' ' + props.product.desc2\r\n                        }\r\n                    </div>\r\n                    <div className='product-by'>\r\n                        by\r\n                        <span style={{ marginLeft: '5px' }}>\r\n                            {\r\n                                props.product.manufacturer\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className='product-price'>\r\n                        <span>$</span>\r\n                        <span>\r\n                            {\r\n                                Number(props.product.price1).toFixed(2)\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className='product-add-cart' onClick={addCart}>\r\n                        Add to cart\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\LipseyCard.js",["400"],"import React, { useContext } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport UserContext from '../../utils/UserContext';\r\nimport { message } from 'antd';\r\n\r\nconst ProductCard = (props) => {\r\n    const { cart, setCart } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        history.push(\"/product/\" + props.product._id)\r\n    }\r\n\r\n    const addCart = (e) => {\r\n        e.stopPropagation()\r\n        if(cart.filter(ct => ct.itemnumber === props.product.itemnumber).length === 0) {\r\n            setCart([...cart, {...props.product, cartCnt: 1}]);\r\n        }else{\r\n            cart.map(ct => {\r\n                if(ct.itemnumber === props.product.itemnumber) {\r\n                    ct['cartCnt'] += 1\r\n                }\r\n            })\r\n            setCart([...cart])\r\n        }\r\n\r\n        message.success(\"Added to Cart successfully!\")\r\n    }\r\n\r\n    return (\r\n        <div className='product-card-container'>\r\n            <div className='product-card' onClick={goToDetail}>\r\n                <div className='product-image'>\r\n                    <LazyLoadImage\r\n                        src={\"https://www.lipseyscloud.com/images/\" + props.product.imageName}\r\n                        alt={'product image'}\r\n                    />\r\n                </div>\r\n                <div className='product-caption'>\r\n                    <div className='product-title'>\r\n                        {\r\n                            props.product.description1 + ' ' + props.product.description2\r\n                        }\r\n                    </div>\r\n                    <div className='product-by'>\r\n                        by\r\n                        <span style={{ marginLeft: '5px' }}>\r\n                            {\r\n                                props.product.manufacturer\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className='product-price'>\r\n                        <span>$</span>\r\n                        <span>\r\n                            {\r\n                                Number(props.product.price).toFixed(2)\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className='product-add-cart' onClick={addCart}>\r\n                        Add to cart\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\components\\ui\\ImageMagnifier.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\Components\\PersonalizedRecommendations\\index.js",[],"C:\\Users\\Early Bird\\Documents\\GitHub\\aotactical-mern-paulo\\frontend\\src\\app\\pages\\MyWishlist\\index.js",["401","402","403","404","405"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport apis from '../../api';\r\nimport ZanderCard from '../../components/ui/ZanderCard';\r\nimport LipseyCard from '../../components/ui/LipseyCard';\r\nimport PersonalizedRecommendations from \"../Components/PersonalizedRecommendations\";\r\nimport UserContext from \"../../utils/UserContext\";\r\n\r\nconst productList = {\r\n    margin: '40px auto 40px auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'stretch',\r\n    gap: '20px'\r\n}\r\n\r\nconst MyWishlist = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const { setSpinning, customerId } = useContext(UserContext);\r\n\r\n    useEffect(async () => {\r\n        setSpinning(true)\r\n        const res = await apis.getWishlistForCustomer({\r\n            id: customerId\r\n        });\r\n        setProducts(res.data.result?.wishlist)\r\n        setSpinning(false)\r\n\r\n\r\n        const pageLog = async () => {\r\n            await apis.addPageLog({\r\n                customerId,\r\n                page: '/my-wishlist'\r\n            })\r\n        }\r\n        pageLog()\r\n    }, [customerId]);\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div style={{ maxWidth: '1440px', margin: '40px auto' }}>\r\n                <div style={{paddingLeft: '20px'}}>\r\n                    \r\n                </div>\r\n                <div className='product-list' style={productList}>\r\n                    {\r\n                        products.length !== 0 && products.map(p => {\r\n                            if(p)\r\n                                return p.isZander && <ZanderCard key={p._id} product={p} />\r\n                        })\r\n                    }\r\n                    {\r\n                        products.length !== 0 && products.map(p => {\r\n                            if(p)\r\n                                return p.isLipsey && <LipseyCard key={p._id} product={p} />\r\n                        })\r\n                    }\r\n                    {\r\n                        products.length === 0 && <div style={{marginLeft: '5px'}}>No Wishlist Products</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <PersonalizedRecommendations />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyWishlist;",{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":69,"column":6,"nodeType":"412","endLine":69,"endColumn":12,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":2,"column":27,"nodeType":"416","messageId":"417","endLine":2,"endColumn":37},{"ruleId":"414","severity":1,"message":"418","line":12,"column":11,"nodeType":"416","messageId":"417","endLine":12,"endColumn":18},{"ruleId":"414","severity":1,"message":"415","line":2,"column":27,"nodeType":"416","messageId":"417","endLine":2,"endColumn":37},{"ruleId":"414","severity":1,"message":"419","line":3,"column":10,"nodeType":"416","messageId":"417","endLine":3,"endColumn":20},{"ruleId":"414","severity":1,"message":"420","line":3,"column":44,"nodeType":"416","messageId":"417","endLine":3,"endColumn":58},{"ruleId":"414","severity":1,"message":"418","line":13,"column":11,"nodeType":"416","messageId":"417","endLine":13,"endColumn":18},{"ruleId":"414","severity":1,"message":"421","line":17,"column":12,"nodeType":"416","messageId":"417","endLine":17,"endColumn":20},{"ruleId":"422","severity":1,"message":"423","line":176,"column":29,"nodeType":"424","endLine":176,"endColumn":109},{"ruleId":"422","severity":1,"message":"423","line":14,"column":9,"nodeType":"424","endLine":20,"endColumn":12},{"ruleId":"414","severity":1,"message":"425","line":5,"column":5,"nodeType":"416","messageId":"417","endLine":5,"endColumn":25},{"ruleId":"414","severity":1,"message":"426","line":8,"column":33,"nodeType":"416","messageId":"417","endLine":8,"endColumn":39},{"ruleId":"414","severity":1,"message":"427","line":12,"column":46,"nodeType":"416","messageId":"417","endLine":12,"endColumn":52},{"ruleId":"428","severity":1,"message":"429","line":60,"column":24,"nodeType":"430","messageId":"431","endLine":60,"endColumn":26},{"ruleId":"432","severity":1,"message":"433","line":61,"column":33,"nodeType":"430","messageId":"434","endLine":61,"endColumn":34},{"ruleId":"428","severity":1,"message":"429","line":62,"column":42,"nodeType":"430","messageId":"431","endLine":62,"endColumn":44},{"ruleId":"432","severity":1,"message":"433","line":63,"column":39,"nodeType":"430","messageId":"434","endLine":63,"endColumn":40},{"ruleId":"428","severity":1,"message":"429","line":64,"column":36,"nodeType":"430","messageId":"431","endLine":64,"endColumn":38},{"ruleId":"432","severity":1,"message":"433","line":65,"column":36,"nodeType":"430","messageId":"434","endLine":65,"endColumn":37},{"ruleId":"428","severity":1,"message":"429","line":66,"column":28,"nodeType":"430","messageId":"431","endLine":66,"endColumn":30},{"ruleId":"432","severity":1,"message":"433","line":67,"column":32,"nodeType":"430","messageId":"434","endLine":67,"endColumn":33},{"ruleId":"428","severity":1,"message":"429","line":68,"column":40,"nodeType":"430","messageId":"431","endLine":68,"endColumn":42},{"ruleId":"432","severity":1,"message":"433","line":69,"column":38,"nodeType":"430","messageId":"434","endLine":69,"endColumn":39},{"ruleId":"428","severity":1,"message":"429","line":70,"column":36,"nodeType":"430","messageId":"431","endLine":70,"endColumn":38},{"ruleId":"432","severity":1,"message":"433","line":71,"column":36,"nodeType":"430","messageId":"434","endLine":71,"endColumn":37},{"ruleId":"428","severity":1,"message":"429","line":72,"column":26,"nodeType":"430","messageId":"431","endLine":72,"endColumn":28},{"ruleId":"432","severity":1,"message":"433","line":73,"column":37,"nodeType":"430","messageId":"434","endLine":73,"endColumn":38},{"ruleId":"428","severity":1,"message":"429","line":74,"column":34,"nodeType":"430","messageId":"431","endLine":74,"endColumn":36},{"ruleId":"432","severity":1,"message":"433","line":75,"column":35,"nodeType":"430","messageId":"434","endLine":75,"endColumn":36},{"ruleId":"428","severity":1,"message":"429","line":76,"column":44,"nodeType":"430","messageId":"431","endLine":76,"endColumn":46},{"ruleId":"432","severity":1,"message":"433","line":77,"column":40,"nodeType":"430","messageId":"434","endLine":77,"endColumn":41},{"ruleId":"410","severity":1,"message":"435","line":112,"column":8,"nodeType":"412","endLine":112,"endColumn":18,"suggestions":"436"},{"ruleId":"410","severity":1,"message":"437","line":187,"column":8,"nodeType":"412","endLine":187,"endColumn":20,"suggestions":"438"},{"ruleId":"422","severity":1,"message":"423","line":236,"column":17,"nodeType":"424","endLine":238,"endColumn":20},{"ruleId":"414","severity":1,"message":"439","line":9,"column":19,"nodeType":"416","messageId":"417","endLine":9,"endColumn":26},{"ruleId":"440","severity":1,"message":"441","line":15,"column":21,"nodeType":"442","messageId":"443","endLine":15,"endColumn":23},{"ruleId":"414","severity":1,"message":"444","line":1,"column":50,"nodeType":"416","messageId":"417","endLine":1,"endColumn":58},{"ruleId":"414","severity":1,"message":"445","line":4,"column":31,"nodeType":"416","messageId":"417","endLine":4,"endColumn":38},{"ruleId":"410","severity":1,"message":"446","line":36,"column":8,"nodeType":"412","endLine":36,"endColumn":18,"suggestions":"447"},{"ruleId":"428","severity":1,"message":"429","line":150,"column":33,"nodeType":"430","messageId":"431","endLine":150,"endColumn":35},{"ruleId":"414","severity":1,"message":"448","line":2,"column":10,"nodeType":"416","messageId":"417","endLine":2,"endColumn":19},{"ruleId":"410","severity":1,"message":"449","line":23,"column":15,"nodeType":"442","endLine":40,"endColumn":6},{"ruleId":"410","severity":1,"message":"450","line":40,"column":8,"nodeType":"412","endLine":40,"endColumn":20,"suggestions":"451"},{"ruleId":"440","severity":1,"message":"441","line":52,"column":21,"nodeType":"442","messageId":"443","endLine":52,"endColumn":23},{"ruleId":"452","severity":1,"message":"453","line":97,"column":41,"nodeType":"424","endLine":97,"endColumn":67},{"ruleId":"452","severity":1,"message":"453","line":158,"column":41,"nodeType":"424","endLine":158,"endColumn":108},{"ruleId":"414","severity":1,"message":"454","line":1,"column":17,"nodeType":"416","messageId":"417","endLine":1,"endColumn":26},{"ruleId":"414","severity":1,"message":"415","line":1,"column":38,"nodeType":"416","messageId":"417","endLine":1,"endColumn":48},{"ruleId":"414","severity":1,"message":"455","line":51,"column":19,"nodeType":"416","messageId":"417","endLine":51,"endColumn":22},{"ruleId":"414","severity":1,"message":"445","line":2,"column":31,"nodeType":"416","messageId":"417","endLine":2,"endColumn":38},{"ruleId":"410","severity":1,"message":"456","line":264,"column":8,"nodeType":"412","endLine":264,"endColumn":10,"suggestions":"457"},{"ruleId":"410","severity":1,"message":"446","line":388,"column":8,"nodeType":"412","endLine":388,"endColumn":18,"suggestions":"458"},{"ruleId":"414","severity":1,"message":"459","line":1,"column":28,"nodeType":"416","messageId":"417","endLine":1,"endColumn":36},{"ruleId":"410","severity":1,"message":"460","line":23,"column":8,"nodeType":"412","endLine":23,"endColumn":10,"suggestions":"461"},{"ruleId":"410","severity":1,"message":"462","line":35,"column":8,"nodeType":"412","endLine":35,"endColumn":20,"suggestions":"463"},{"ruleId":"440","severity":1,"message":"441","line":67,"column":25,"nodeType":"442","messageId":"443","endLine":67,"endColumn":27},{"ruleId":"414","severity":1,"message":"418","line":13,"column":11,"nodeType":"416","messageId":"417","endLine":13,"endColumn":18},{"ruleId":"422","severity":1,"message":"423","line":150,"column":25,"nodeType":"424","endLine":150,"endColumn":28},{"ruleId":"410","severity":1,"message":"449","line":173,"column":15,"nodeType":"442","endLine":177,"endColumn":6},{"ruleId":"410","severity":1,"message":"464","line":177,"column":8,"nodeType":"412","endLine":177,"endColumn":10,"suggestions":"465"},{"ruleId":"440","severity":1,"message":"441","line":185,"column":43,"nodeType":"442","messageId":"443","endLine":185,"endColumn":45},{"ruleId":"410","severity":1,"message":"466","line":446,"column":8,"nodeType":"412","endLine":446,"endColumn":10,"suggestions":"467"},{"ruleId":"414","severity":1,"message":"468","line":448,"column":11,"nodeType":"416","messageId":"417","endLine":448,"endColumn":30},{"ruleId":"414","severity":1,"message":"469","line":452,"column":11,"nodeType":"416","messageId":"417","endLine":452,"endColumn":33},{"ruleId":"414","severity":1,"message":"470","line":456,"column":11,"nodeType":"416","messageId":"417","endLine":456,"endColumn":25},{"ruleId":"440","severity":1,"message":"471","line":459,"column":19,"nodeType":"442","messageId":"472","endLine":459,"endColumn":21},{"ruleId":"440","severity":1,"message":"441","line":473,"column":17,"nodeType":"473","messageId":"474","endLine":473,"endColumn":24},{"ruleId":"440","severity":1,"message":"441","line":478,"column":24,"nodeType":"442","messageId":"443","endLine":478,"endColumn":26},{"ruleId":"414","severity":1,"message":"475","line":490,"column":11,"nodeType":"416","messageId":"417","endLine":490,"endColumn":22},{"ruleId":"414","severity":1,"message":"476","line":497,"column":11,"nodeType":"416","messageId":"417","endLine":497,"endColumn":32},{"ruleId":"414","severity":1,"message":"445","line":3,"column":26,"nodeType":"416","messageId":"417","endLine":3,"endColumn":33},{"ruleId":"410","severity":1,"message":"449","line":14,"column":15,"nodeType":"442","endLine":20,"endColumn":6},{"ruleId":"410","severity":1,"message":"477","line":20,"column":8,"nodeType":"412","endLine":20,"endColumn":10,"suggestions":"478"},{"ruleId":"440","severity":1,"message":"441","line":28,"column":43,"nodeType":"442","messageId":"443","endLine":28,"endColumn":45},{"ruleId":"440","severity":1,"message":"441","line":41,"column":43,"nodeType":"442","messageId":"443","endLine":41,"endColumn":45},{"ruleId":"440","severity":1,"message":"441","line":54,"column":43,"nodeType":"442","messageId":"443","endLine":54,"endColumn":45},{"ruleId":"452","severity":1,"message":"453","line":141,"column":41,"nodeType":"424","endLine":141,"endColumn":186},{"ruleId":"452","severity":1,"message":"453","line":194,"column":41,"nodeType":"424","endLine":194,"endColumn":186},{"ruleId":"414","severity":1,"message":"479","line":3,"column":10,"nodeType":"416","messageId":"417","endLine":3,"endColumn":30},{"ruleId":"414","severity":1,"message":"480","line":3,"column":32,"nodeType":"416","messageId":"417","endLine":3,"endColumn":42},{"ruleId":"414","severity":1,"message":"418","line":14,"column":11,"nodeType":"416","messageId":"417","endLine":14,"endColumn":18},{"ruleId":"414","severity":1,"message":"481","line":62,"column":12,"nodeType":"416","messageId":"417","endLine":62,"endColumn":23},{"ruleId":"414","severity":1,"message":"482","line":66,"column":12,"nodeType":"416","messageId":"417","endLine":66,"endColumn":26},{"ruleId":"414","severity":1,"message":"483","line":66,"column":28,"nodeType":"416","messageId":"417","endLine":66,"endColumn":45},{"ruleId":"414","severity":1,"message":"484","line":67,"column":12,"nodeType":"416","messageId":"417","endLine":67,"endColumn":28},{"ruleId":"414","severity":1,"message":"485","line":67,"column":30,"nodeType":"416","messageId":"417","endLine":67,"endColumn":49},{"ruleId":"414","severity":1,"message":"486","line":68,"column":12,"nodeType":"416","messageId":"417","endLine":68,"endColumn":26},{"ruleId":"414","severity":1,"message":"487","line":68,"column":28,"nodeType":"416","messageId":"417","endLine":68,"endColumn":45},{"ruleId":"488","severity":1,"message":"489","line":131,"column":21,"nodeType":"424","endLine":131,"endColumn":107},{"ruleId":"422","severity":1,"message":"423","line":272,"column":25,"nodeType":"424","endLine":272,"endColumn":28},{"ruleId":"410","severity":1,"message":"449","line":295,"column":15,"nodeType":"442","endLine":299,"endColumn":6},{"ruleId":"410","severity":1,"message":"490","line":299,"column":8,"nodeType":"412","endLine":299,"endColumn":10,"suggestions":"491"},{"ruleId":"440","severity":1,"message":"441","line":307,"column":43,"nodeType":"442","messageId":"443","endLine":307,"endColumn":45},{"ruleId":"410","severity":1,"message":"466","line":809,"column":8,"nodeType":"412","endLine":809,"endColumn":10,"suggestions":"492"},{"ruleId":"410","severity":1,"message":"449","line":25,"column":15,"nodeType":"442","endLine":35,"endColumn":6},{"ruleId":"410","severity":1,"message":"450","line":35,"column":8,"nodeType":"412","endLine":35,"endColumn":29,"suggestions":"493"},{"ruleId":"410","severity":1,"message":"494","line":69,"column":8,"nodeType":"412","endLine":69,"endColumn":20,"suggestions":"495"},{"ruleId":"422","severity":1,"message":"423","line":94,"column":25,"nodeType":"424","endLine":94,"endColumn":28},{"ruleId":"414","severity":1,"message":"427","line":3,"column":22,"nodeType":"416","messageId":"417","endLine":3,"endColumn":28},{"ruleId":"414","severity":1,"message":"496","line":50,"column":12,"nodeType":"416","messageId":"417","endLine":50,"endColumn":19},{"ruleId":"414","severity":1,"message":"497","line":50,"column":21,"nodeType":"416","messageId":"417","endLine":50,"endColumn":31},{"ruleId":"410","severity":1,"message":"498","line":64,"column":8,"nodeType":"412","endLine":64,"endColumn":181,"suggestions":"499"},{"ruleId":"432","severity":1,"message":"433","line":109,"column":29,"nodeType":"430","messageId":"434","endLine":109,"endColumn":30},{"ruleId":"432","severity":1,"message":"433","line":111,"column":35,"nodeType":"430","messageId":"434","endLine":111,"endColumn":36},{"ruleId":"432","severity":1,"message":"433","line":113,"column":32,"nodeType":"430","messageId":"434","endLine":113,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":115,"column":28,"nodeType":"430","messageId":"434","endLine":115,"endColumn":29},{"ruleId":"432","severity":1,"message":"433","line":117,"column":34,"nodeType":"430","messageId":"434","endLine":117,"endColumn":35},{"ruleId":"432","severity":1,"message":"433","line":119,"column":32,"nodeType":"430","messageId":"434","endLine":119,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":121,"column":33,"nodeType":"430","messageId":"434","endLine":121,"endColumn":34},{"ruleId":"432","severity":1,"message":"433","line":123,"column":31,"nodeType":"430","messageId":"434","endLine":123,"endColumn":32},{"ruleId":"432","severity":1,"message":"433","line":125,"column":36,"nodeType":"430","messageId":"434","endLine":125,"endColumn":37},{"ruleId":"432","severity":1,"message":"433","line":153,"column":29,"nodeType":"430","messageId":"434","endLine":153,"endColumn":30},{"ruleId":"432","severity":1,"message":"433","line":155,"column":35,"nodeType":"430","messageId":"434","endLine":155,"endColumn":36},{"ruleId":"432","severity":1,"message":"433","line":157,"column":32,"nodeType":"430","messageId":"434","endLine":157,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":159,"column":28,"nodeType":"430","messageId":"434","endLine":159,"endColumn":29},{"ruleId":"432","severity":1,"message":"433","line":161,"column":34,"nodeType":"430","messageId":"434","endLine":161,"endColumn":35},{"ruleId":"432","severity":1,"message":"433","line":163,"column":32,"nodeType":"430","messageId":"434","endLine":163,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":165,"column":33,"nodeType":"430","messageId":"434","endLine":165,"endColumn":34},{"ruleId":"432","severity":1,"message":"433","line":167,"column":31,"nodeType":"430","messageId":"434","endLine":167,"endColumn":32},{"ruleId":"432","severity":1,"message":"433","line":169,"column":36,"nodeType":"430","messageId":"434","endLine":169,"endColumn":37},{"ruleId":"432","severity":1,"message":"433","line":179,"column":33,"nodeType":"430","messageId":"434","endLine":179,"endColumn":34},{"ruleId":"432","severity":1,"message":"433","line":181,"column":39,"nodeType":"430","messageId":"434","endLine":181,"endColumn":40},{"ruleId":"432","severity":1,"message":"433","line":183,"column":36,"nodeType":"430","messageId":"434","endLine":183,"endColumn":37},{"ruleId":"432","severity":1,"message":"433","line":185,"column":32,"nodeType":"430","messageId":"434","endLine":185,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":187,"column":38,"nodeType":"430","messageId":"434","endLine":187,"endColumn":39},{"ruleId":"432","severity":1,"message":"433","line":189,"column":36,"nodeType":"430","messageId":"434","endLine":189,"endColumn":37},{"ruleId":"432","severity":1,"message":"433","line":191,"column":37,"nodeType":"430","messageId":"434","endLine":191,"endColumn":38},{"ruleId":"432","severity":1,"message":"433","line":193,"column":35,"nodeType":"430","messageId":"434","endLine":193,"endColumn":36},{"ruleId":"432","severity":1,"message":"433","line":195,"column":40,"nodeType":"430","messageId":"434","endLine":195,"endColumn":41},{"ruleId":"410","severity":1,"message":"500","line":204,"column":8,"nodeType":"412","endLine":204,"endColumn":20,"suggestions":"501"},{"ruleId":"428","severity":1,"message":"429","line":235,"column":63,"nodeType":"430","messageId":"431","endLine":235,"endColumn":65},{"ruleId":"428","severity":1,"message":"429","line":235,"column":84,"nodeType":"430","messageId":"431","endLine":235,"endColumn":86},{"ruleId":"428","severity":1,"message":"429","line":238,"column":64,"nodeType":"430","messageId":"431","endLine":238,"endColumn":66},{"ruleId":"428","severity":1,"message":"429","line":238,"column":85,"nodeType":"430","messageId":"431","endLine":238,"endColumn":87},{"ruleId":"422","severity":1,"message":"423","line":248,"column":29,"nodeType":"424","endLine":248,"endColumn":61},{"ruleId":"414","severity":1,"message":"445","line":2,"column":17,"nodeType":"416","messageId":"417","endLine":2,"endColumn":24},{"ruleId":"428","severity":1,"message":"429","line":79,"column":41,"nodeType":"430","messageId":"431","endLine":79,"endColumn":43},{"ruleId":"414","severity":1,"message":"479","line":3,"column":10,"nodeType":"416","messageId":"417","endLine":3,"endColumn":30},{"ruleId":"414","severity":1,"message":"480","line":3,"column":32,"nodeType":"416","messageId":"417","endLine":3,"endColumn":42},{"ruleId":"414","severity":1,"message":"419","line":7,"column":16,"nodeType":"416","messageId":"417","endLine":7,"endColumn":26},{"ruleId":"452","severity":1,"message":"453","line":84,"column":8,"nodeType":"424","endLine":84,"endColumn":86},{"ruleId":"452","severity":1,"message":"453","line":168,"column":10,"nodeType":"424","endLine":168,"endColumn":152},{"ruleId":"452","severity":1,"message":"453","line":178,"column":10,"nodeType":"424","endLine":178,"endColumn":152},{"ruleId":"452","severity":1,"message":"453","line":192,"column":10,"nodeType":"424","endLine":192,"endColumn":152},{"ruleId":"452","severity":1,"message":"453","line":202,"column":10,"nodeType":"424","endLine":202,"endColumn":152},{"ruleId":"414","severity":1,"message":"502","line":224,"column":24,"nodeType":"416","messageId":"417","endLine":224,"endColumn":40},{"ruleId":"410","severity":1,"message":"449","line":227,"column":12,"nodeType":"442","endLine":233,"endColumn":3},{"ruleId":"410","severity":1,"message":"450","line":233,"column":5,"nodeType":"412","endLine":233,"endColumn":7,"suggestions":"503"},{"ruleId":"414","severity":1,"message":"504","line":2,"column":18,"nodeType":"416","messageId":"417","endLine":2,"endColumn":23},{"ruleId":"414","severity":1,"message":"505","line":2,"column":25,"nodeType":"416","messageId":"417","endLine":2,"endColumn":30},{"ruleId":"414","severity":1,"message":"506","line":2,"column":59,"nodeType":"416","messageId":"417","endLine":2,"endColumn":65},{"ruleId":"414","severity":1,"message":"507","line":2,"column":76,"nodeType":"416","messageId":"417","endLine":2,"endColumn":86},{"ruleId":"414","severity":1,"message":"508","line":15,"column":7,"nodeType":"416","messageId":"417","endLine":15,"endColumn":17},{"ruleId":"452","severity":1,"message":"453","line":120,"column":33,"nodeType":"424","endLine":120,"endColumn":79},{"ruleId":"422","severity":1,"message":"423","line":155,"column":75,"nodeType":"424","endLine":155,"endColumn":105},{"ruleId":"422","severity":1,"message":"423","line":161,"column":79,"nodeType":"424","endLine":161,"endColumn":159},{"ruleId":"414","severity":1,"message":"454","line":1,"column":29,"nodeType":"416","messageId":"417","endLine":1,"endColumn":38},{"ruleId":"440","severity":1,"message":"441","line":22,"column":25,"nodeType":"442","messageId":"443","endLine":22,"endColumn":27},{"ruleId":"440","severity":1,"message":"441","line":21,"column":25,"nodeType":"442","messageId":"443","endLine":21,"endColumn":27},{"ruleId":"414","severity":1,"message":"448","line":2,"column":10,"nodeType":"416","messageId":"417","endLine":2,"endColumn":19},{"ruleId":"410","severity":1,"message":"449","line":23,"column":15,"nodeType":"442","endLine":39,"endColumn":6},{"ruleId":"410","severity":1,"message":"450","line":39,"column":8,"nodeType":"412","endLine":39,"endColumn":20,"suggestions":"509"},{"ruleId":"440","severity":1,"message":"471","line":50,"column":65,"nodeType":"442","messageId":"472","endLine":50,"endColumn":67},{"ruleId":"440","severity":1,"message":"471","line":56,"column":65,"nodeType":"442","messageId":"472","endLine":56,"endColumn":67},"no-native-reassign",["510"],"no-negated-in-lhs",["511"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'customerId'. Either include it or remove the dependency array.","ArrayExpression",["512"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'useHistory' is defined but never used.","'FacebookFilled' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ShoppingCartOutlined' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'queryParameters'. Either include it or remove the dependency array.",["513"],"React Hook useEffect has a missing dependency: 'setCart'. Either include it or remove the dependency array.",["514"],"'setCart' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Children' is defined but never used.","'message' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'setSpinning'. Either include them or remove the dependency array.",["515"],"'useParams' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'setSpinning'. Either include it or remove the dependency array.",["516"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["517"],["518"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setSpinning'. Either include them or remove the dependency array.",["519"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["520"],"React Hook useEffect has missing dependencies: 'getAccounts' and 'setSpinning'. Either include them or remove the dependency array.",["521"],"React Hook useEffect has a missing dependency: 'emptyForm'. Either include it or remove the dependency array.",["522"],"'filterAccountChange' is assigned a value but never used.","'filterContractorChange' is assigned a value but never used.","'filterAccounts' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'filterClear' is assigned a value but never used.","'accountFullNameSearch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllProducts', 'getSlideProducts', 'getTopProducts', and 'setSpinning'. Either include them or remove the dependency array.",["523"],"'EyeInvisibleOutlined' is defined but never used.","'EyeTwoTone' is defined but never used.","'productsTmp' is assigned a value but never used.","'filterEmployee' is assigned a value but never used.","'setFilterEmployee' is assigned a value but never used.","'filterContractor' is assigned a value but never used.","'setFilterContractor' is assigned a value but never used.","'filterFullName' is assigned a value but never used.","'setFilterFullName' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'getProducts' and 'setSpinning'. Either include them or remove the dependency array.",["524"],["525"],["526"],"React Hook useEffect has missing dependencies: 'category' and 'searchkey'. Either include them or remove the dependency array.",["527"],"'pageCnt' is assigned a value but never used.","'setPageCnt' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'productStatus' and 'setSpinning'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has missing dependencies: 'category', 'exclude', 'fromPrice', 'itemPerPage', 'sortBy', 'toPrice', 'upc', 'word', and 'wordOption'. Either include them or remove the dependency array.",["529"],"'setSlideProducts' is assigned a value but never used.",["530"],"'Modal' is defined but never used.","'Space' is defined but never used.","'Drawer' is defined but never used.","'DatePicker' is defined but never used.","'InfoWindow' is assigned a value but never used.",["531"],"no-global-assign","no-unsafe-negation",{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"538","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"551","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"540","fix":"568"},"Update the dependencies array to be: [cart, customerId]",{"range":"569","text":"570"},"Update the dependencies array to be: [location, queryParameters]",{"range":"571","text":"572"},"Update the dependencies array to be: [customerId, setCart]",{"range":"573","text":"574"},"Update the dependencies array to be: [form, setSpinning, userData]",{"range":"575","text":"576"},"Update the dependencies array to be: [customerId, setSpinning]",{"range":"577","text":"578"},"Update the dependencies array to be: [getUserInfo]",{"range":"579","text":"580"},{"range":"581","text":"576"},"Update the dependencies array to be: [id, setSpinning]",{"range":"582","text":"583"},"Update the dependencies array to be: [customerId, id]",{"range":"584","text":"585"},"Update the dependencies array to be: [getAccounts, setSpinning]",{"range":"586","text":"587"},"Update the dependencies array to be: [emptyForm]",{"range":"588","text":"589"},"Update the dependencies array to be: [getAllProducts, getSlideProducts, getTopProducts, setSpinning]",{"range":"590","text":"591"},"Update the dependencies array to be: [getProducts, setSpinning]",{"range":"592","text":"593"},{"range":"594","text":"589"},"Update the dependencies array to be: [category, searchkey, setSpinning]",{"range":"595","text":"596"},"Update the dependencies array to be: [category, customerId, searchkey]",{"range":"597","text":"598"},"Update the dependencies array to be: [word, wordOption, exclude, upc, fromPrice, toPrice, category, sortBy, itemPerPage, type, productStatus.old, productStatus.fresh, productStatus.used, page, itemPerPageValue, setSpinning, productStatus]",{"range":"599","text":"600"},"Update the dependencies array to be: [category, customerId, exclude, fromPrice, itemPerPage, sortBy, toPrice, upc, word, wordOption]",{"range":"601","text":"602"},"Update the dependencies array to be: [setSpinning]",{"range":"603","text":"604"},{"range":"605","text":"578"},[1964,1970],"[cart, customerId]",[4093,4103],"[location, queryParameters]",[6204,6216],"[customerId, setCart]",[1311,1321],"[form, setSpinning, userData]",[1220,1232],"[customerId, setSpinning]",[8621,8623],"[getUserInfo]",[13154,13164],[824,826],"[id, setSpinning]",[1072,1084],"[customerId, id]",[5360,5362],"[getAccounts, setSpinning]",[13014,13016],"[emptyForm]",[781,783],"[getAllProducts, getSlideProducts, getTopProducts, setSpinning]",[8808,8810],"[getProducts, setSpinning]",[24523,24525],[1144,1165],"[category, searchkey, setSpinning]",[2097,2109],"[category, customerId, searchkey]",[2483,2656],"[word, wordOption, exclude, upc, fromPrice, toPrice, category, sortBy, itemPerPage, type, productStatus.old, productStatus.fresh, productStatus.used, page, itemPerPageValue, setSpinning, productStatus]",[7577,7589],"[category, customerId, exclude, fromPrice, itemPerPage, sortBy, toPrice, upc, word, wordOption]",[7667,7669],"[setSpinning]",[1192,1204]]